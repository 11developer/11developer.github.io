[{"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Begin of recon"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 1, "seconds": 36}, "line": " Examining the web page to find Magento, noticing /index.php/ mod-rewrite misconfig and old copyright"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 4, "seconds": 50}, "line": " Whoops should of done apt search magescan, either way this package is not in Kali"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Running MageScan to scan the website"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Finding an open configuration file (app/etc/local.xml)"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 10, "seconds": 30}, "line": " Running searchsploit to identify public exploits"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 12, "seconds": 10}, "line": " Examining an exploit that will add an administrative user via SQL Injection"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 15, "seconds": 15}, "line": " Running the exploit out of the box didn't work, send it through burp in order to debug it"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Exploit needed to be modified to include index.php due to mod-rewrite misconfig"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 19, "seconds": 25}, "line": " Going back to SearchSploit and using the Authenticated RCE Exploit"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 21, "seconds": 30}, "line": " Making the obvious changes to fix the exploit script"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 24, "seconds": 17}, "line": " Debugging the exploit by running it through burpsuite, find out we need to use an login page"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 29, "seconds": 0}, "line": " Bit more in-depth debugging by setting a breakpoint with pdb"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 30, "seconds": 30}, "line": " The regex is failing due to page not returning anything, the URL has a time span lets increase that"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 33, "seconds": 15}, "line": " Finally fixed this exploit! Reverse Shell Returned"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 35, "seconds": 30}, "line": " Noticing we can exec vim with sudo, lets privesc"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 37, "seconds": 10}, "line": " Mentioning GTFOBins which helps find privesc paths from privileged programs"}, {"machine": "Swagshop", "videoId": "qECG2_8xw_s", "timestamp": {"minutes": 38, "seconds": 15}, "line": " EXTRA: Examining the PHP Object Injection RCE Exploit"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Begin of Recon"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Examining login request while GoBuster runs"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 5, "seconds": 35}, "line": " Noticing weird behavior by modifying db parameter in login request"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 7, "seconds": 30}, "line": " Finding what the Error numbers mean. (SQL Error Codes)"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 8, "seconds": 50}, "line": " Testing if we can trick the application into authentication against us"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Starting up metasploit to steal the login hash of a MYSQL Login"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 12, "seconds": 30}, "line": " Cracking the MySQL Hash with Hashcat"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Creating a databse locally for the application to authenticate to"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Examining what MySQL Does after authentication in Wireshark"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 24, "seconds": 30}, "line": " Creating the database structure so the application will authenticate against our database"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Begin of the File Encryptor PHP App"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Performing a Known Plaintext attack against the RC4 Encryption"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Explaining the Known Plaintext"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Creating a Python Script to perform a SSRF attack and decrypt content"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 54, "seconds": 25}, "line": " Script done, discovering a LFI Exploit in /dev/"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 57, "seconds": 30}, "line": " Using PHP Filters to convert LFI to source code disclosure"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 59, "seconds": 50}, "line": " Extracting sqlite_test_page.php source code"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 61, "seconds": 0}, "line": " Manually analyzing the source code to discover a way to write files"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 63, "seconds": 0}, "line": " Checking PayloadAllTheThings to get a payload for dropping files"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 75, "seconds": 38}, "line": " Testing dropping a php script for code execution"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 78, "seconds": 0}, "line": " Using Chankro to bypass PHP Disabled functions"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 80, "seconds": 45}, "line": " Creating a PHP Script to download Chankro Script to avoid bad characters in the RCE"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 84, "seconds": 50}, "line": " Reverse shell returned, finding a VIMCrypted file in Rijndael Home"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 85, "seconds": 35}, "line": " Decrypting Creds.txt with a known plaintext attack in VimCrypt 02 (Blowfish)"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 88, "seconds": 20}, "line": " Downloading the files to our local box and explaining the attack"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 90, "seconds": 30}, "line": " Copying our Python Script from earlier and modify it to work with our VIM File"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 98, "seconds": 20}, "line": " Decrypted the creds and use them to SSH"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 99, "seconds": 10}, "line": " Analyzing the kryptos.py file"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 101, "seconds": 0}, "line": " Testing how random the random is"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 106, "seconds": 0}, "line": " Creating a python script to bruteforce the key as we know the randomness is broken"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 117, "seconds": 0}, "line": " Script to brute force signing key done"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 118, "seconds": 45}, "line": " Getting code execution within the eval statement"}, {"machine": "Kryptos", "videoId": "4uCoI5YzOwk", "timestamp": {"minutes": 124, "seconds": 30}, "line": " Extra content, showing by using the encrypt method twice early on \u2014 you can decrypt pages"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 0, "seconds": 40}, "line": " Begin of Recon"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 2, "seconds": 45}, "line": " Checking FTP to get a note"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 3, "seconds": 38}, "line": " Going to each of the three websites"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 4, "seconds": 30}, "line": " Running Gobuster on port 80/3000"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Taking notes of all the login pages (forgot Ajenti)"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 7, "seconds": 55}, "line": " config.php found which has a password"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Discovering /login on port 3000 accepts username=&password= "}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 11, "seconds": 25}, "line": " Successful login! JWT Token returned"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 14, "seconds": 0}, "line": " Using curl to add the JWT Token in the header to access other api endpoints"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 15, "seconds": 10}, "line": " Using BurpSuite to add headers"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 18, "seconds": 30}, "line": " Navigating the Rest API to dump the usernames and passwords"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Attempting logins on other services"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 21, "seconds": 30}, "line": " Derry can login to /management"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 22, "seconds": 50}, "line": " Ajenti Password! Lets try logging in"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 22, "seconds": 30}, "line": " Ajenti has a virtual terminal that is running as root!"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 26, "seconds": 20}, "line": " Extra Content - Getting a reverse shell"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 28, "seconds": 30}, "line": " Grabbing the JWT Secret, so we can forge our own tokens!"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 29, "seconds": 10}, "line": " Creating a python script to generate JWT Tokens"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 30, "seconds": 20}, "line": " This token has no expiration time, and is assigned at 0.  Should never expire!"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 31, "seconds": 30}, "line": " Adding Requests to our script, so the script can make web requests"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 33, "seconds": 15}, "line": " Lets try removing all signing algorithms from the token and see if server accepts it"}, {"machine": "Luke", "videoId": "gaBdfD4BGBo", "timestamp": {"minutes": 34, "seconds": 40}, "line": " Cracking the JWT Token Signing key with Hashcat"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 1, "seconds": 33}, "line": " Begin of recon"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 2, "seconds": 30}, "line": " Using SMBClient to view open shares, discover /Backups"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Mount the SMB Share "}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 3, "seconds": 40}, "line": " Playing with SMBMap which is a bit more automated but write files!"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 5, "seconds": 22}, "line": " Checking out files in the /Backups share"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Using 7zip to view files in a VHD file"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 7, "seconds": 50}, "line": " Installing libguestfs-tools in order to use guestmount"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 9, "seconds": 25}, "line": " Mounting the VHD with guestmount"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 11, "seconds": 0}, "line": " Extracting local passwords from SAM and SYSTEM with secretsdump"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 13, "seconds": 30}, "line": " Cracking the hash and then using SSH to login to the box"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 14, "seconds": 30}, "line": " Viewing local adminstrators and seeing administrators is not actually disabled (backup indicated it was)"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 16, "seconds": 30}, "line": " Running JAWS"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 19, "seconds": 30}, "line": " Discovering mRemoteNG installed"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Looks like there is a way to decrypt passwords stored in mRemoteNG"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 21, "seconds": 40}, "line": " Installing mRemoteNG-Decrypt then decrypting the passwords in the config"}, {"machine": "Bastion", "videoId": "2j3FNp5pjQ4", "timestamp": {"minutes": 24, "seconds": 30}, "line": " Using PSEXEC or SSH to remote in as administrator"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 0, "seconds": 42}, "line": " Begin of recon"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 1, "seconds": 8}, "line": " Examining the webpage "}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 4, "seconds": 28}, "line": " Discoving SFTP Credentials on the web page"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Playing with the SFTP Server"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 8, "seconds": 40}, "line": " Discoving the SymLink command to break out of home directory"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 9, "seconds": 40}, "line": " Symlinking the root directory to find the source of login.php through VIM SWP Files."}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 13, "seconds": 0}, "line": " Second way to get source code, symlink with a file naming ending in not PHP"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 15, "seconds": 30}, "line": " Examining the source code to login.php and getting a hard coded username"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 18, "seconds": 10}, "line": " Examining index.php to see how to access a login portal (admin)"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 19, "seconds": 20}, "line": " Using SSH to do port forwarding (Reddish)"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 21, "seconds": 20}, "line": " Examinig the admin web page"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 24, "seconds": 13}, "line": " Examing the Apache Rewrite Engine Rules"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 25, "seconds": 10}, "line": " Checking the source code to addon-manager to identify how upload/download features work"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 26, "seconds": 15}, "line": " Explaining the Rewrite attack"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 30, "seconds": 40}, "line": " Uploading a reverse shell, then executing"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 33, "seconds": 30}, "line": " Reverse shell returned"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 34, "seconds": 30}, "line": " Can sudo with apt, checking GTFO Bins"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 36, "seconds": 0}, "line": " Looks like we can MITM Apt due to passing a proxy through sudo"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Configuring Burp to act as an HTTP Proxy and pass it to Python"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 40, "seconds": 50}, "line": " Creating the Malicious APT Repo"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 45, "seconds": 30}, "line": " Creating the Malicious Deb File"}, {"machine": "OneTwoSeven", "videoId": "EXuEDHFjS9E", "timestamp": {"minutes": 51, "seconds": 30}, "line": " Getting the Root Shell"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Begin of recon"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 3, "seconds": 30}, "line": " Running GoBuster to discover /dev and index.php"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Checking out the web application"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 7, "seconds": 55}, "line": " Discovering SQL Injection in ID and playing with it"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 11, "seconds": 45}, "line": " Running SQLMap to dump pieces of the database"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 14, "seconds": 55}, "line": " Nginx Misconfiguration, missing trailing slash"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 19, "seconds": 10}, "line": " Downloading source code of the application"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 21, "seconds": 20}, "line": " Exploring the source of the application"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 25, "seconds": 47}, "line": " Specifying an error string in SQLMap to have it do boolean logic versus time-based"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Installing a Docker LAMP Server to run the web application"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 45, "seconds": 40}, "line": " Finally got the application running locally (Missed a comma which created a lot more work)"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 46, "seconds": 15}, "line": " Analyzing the SQL Injection with Debug turned on to see how it works"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Explanation of gaining code execution through an LFI + PHP Cookies"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 53, "seconds": 0}, "line": " Exploring the cookie"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 55, "seconds": 40}, "line": " Have code execution on our docker, lets exploit the server"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 60, "seconds": 0}, "line": " Reverse Shell returned"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 62, "seconds": 35}, "line": " Exploring MySQL database and escalating to GULY"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 68, "seconds": 30}, "line": " Running LinEnum as Guly and going through the results"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 72, "seconds": 0}, "line": " Exploring files Guly can access due to Grub Group, downloading initrd"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 74, "seconds": 10}, "line": " Decompressing initrd.img and looking for the file GULY modified"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 81, "seconds": 20}, "line": " Running STRACE to see what uinitrd does"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 84, "seconds": 20}, "line": " Running uinitrd after modifying /etc/hosts and /boot/guid"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 86, "seconds": 20}, "line": " Extra Content: If you had trouble with TTY, SSH is accessible via IPv6"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 90, "seconds": 50}, "line": " Extra Content: Runing GIXY to analyze the NGINX Configuration"}, {"machine": "Unattended", "videoId": "2SATzCQY0Zw", "timestamp": {"minutes": 95, "seconds": 20}, "line": " Extra Content: Looking at uinitrd in Ghidra"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 0, "seconds": 35}, "line": " Begin of Recon"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 1, "seconds": 42}, "line": " Checking the MangeEngine Page"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 2, "seconds": 23}, "line": " Running Searchsploit to see potential exploits"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 3, "seconds": 40}, "line": " Enumerating valid usernames via AjaxDomainServlet"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Logging in with guest:guest"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 7, "seconds": 10}, "line": " Running the privilege escalation script to get Administrator access"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 8, "seconds": 0}, "line": " Searching for information on this exploit"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Blog post missing... Searching Archive.org and Google Cache for a mirror"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Making curl go through burp to step through the exploit in BurpSuite"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 18, "seconds": 0}, "line": " Copying the admin cookies into FireFox "}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 19, "seconds": 25}, "line": " Going to Admin then Custom Triggers to execute code on the server"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 21, "seconds": 50}, "line": " Getting a reverse shell via Nishang"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 22, "seconds": 30}, "line": " Using iconv to create UTF-16LE encoded Base64 for use with \"-EncodedCommand\" option"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 25, "seconds": 45}, "line": " Reverse Shell as System returned, but EFS Protects the flags"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 26, "seconds": 45}, "line": " Finding interesting files with get-childitem -recurse . | select FullName"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Copying mimikatz over to the box to steal NTLM Hashes"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Defender blocked us.  Disable defender with Set-MpPreference -DisableRealtimeMonitoring $true"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 32, "seconds": 50}, "line": " Using hashes.org to view password of Zachary, checking his groups to see he can view event logs"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 33, "seconds": 30}, "line": " Doing some powershell goodness to search event logs!"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 40, "seconds": 50}, "line": " Extracting ProcessCommandLine from the logs (Tolu Password), its a shame Nishang screws with how some commands output to stdout.  This could of been a lot cleaner."}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 43, "seconds": 0}, "line": " Using Mimikatz to decrypt the EFS Protected file with Tolu's password"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 57, "seconds": 25}, "line": " Need to read Leo's admin-pass.xml, load meterpreter and migrate into his namespace"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 60, "seconds": 20}, "line": " admin-pass is the output of SecureString, lets decrypt it to get the admin password"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 62, "seconds": 20}, "line": " Using Invoke-Command with the credential object created to execute commands as administrator"}, {"machine": "Helpline", "videoId": "Vs3oSDlzxwA", "timestamp": {"minutes": 63, "seconds": 50}, "line": " Cannot read root.txt because of \"Double Hop Problem\" (how PowerShell Authenticates), using CredSSP Authentication to fix this."}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 0, "seconds": 55}, "line": " Begin of Recon "}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 2, "seconds": 20}, "line": " Checking the WebPages"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Examining /userSubscribe.faces, to discover potential deserialization"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 5, "seconds": 0}, "line": " Exploring javax.faces.ViewState"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 5, "seconds": 50}, "line": " Googling around to see what an unencrypted serialized object should look like"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 7, "seconds": 15}, "line": " Checking out SMB to discover an openshare"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Downloading appserver.zip from batshare via smbclient"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 11, "seconds": 0}, "line": " Cracking a luks encrypted file with dd and hashcat"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 14, "seconds": 0}, "line": " Luks cracked, mounting the disk with luksOpen"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 16, "seconds": 20}, "line": " Discovery of the secret used to encrypt the java object"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 18, "seconds": 10}, "line": " Creating a python script to decrypt the ViewState to verify we have correct crypto settings"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 23, "seconds": 10}, "line": " Script completed, lets test the decryption!"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 24, "seconds": 15}, "line": " Downloading ysoserial to create a deserialization CommonCollections gadget"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Creating a python script to exploit the deserialization vuln"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Script complete!  We got a ping, testing the MyFaces serialization objects (did not work)"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 33, "seconds": 0}, "line": " Modifying the script to run commands other than what ySoSerial provided"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 41, "seconds": 10}, "line": " Script updates finished, trying to get a reverse shell via nishang (did not work)"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 42, "seconds": 40}, "line": " Trying Invoke-WebRequest, because Net.WebClient did not work.  (testing for constrained mode)"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 45, "seconds": 0}, "line": " Downloading netcat to upload to the box"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Netcat returned a powershell reverse shell "}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 47, "seconds": 20}, "line": " Discovering Backup.zip, downloading, using readpst to convert it to a plaintext mbox file"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Using evolution to view mbox file and find Batman's password"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 52, "seconds": 45}, "line": " Using Powershell's Invoke-Command to execute commands as Batman (like runas)"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 55, "seconds": 40}, "line": " Reverse shell as batman returned!  Running a few commands to find out he is localadmin but needs to break out of UAC"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 58, "seconds": 10}, "line": " Unintended: Using net use to mount c$ and view the flag"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 59, "seconds": 30}, "line": " Checking github hfiref0x/UACME to find a UAC Bypass.  Chose one by a fellow HTB Member"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 62, "seconds": 10}, "line": " Using GreatSCT/MSBuild to launch Meterpreter"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 62, "seconds": 45}, "line": " While GreatSCT installs, create a DLL to return a reverse shell"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 66, "seconds": 0}, "line": " copying the DLL into c:\\users\\batman\\appdata\\local\\microsoft\\windowsapps"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 68, "seconds": 30}, "line": " Using GreatSCT to generate payloads"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 71, "seconds": 50}, "line": " Getting a Meterpreter Session then migrating into an interactive process"}, {"machine": "Arkham", "videoId": "krC5j1Ab44I", "timestamp": {"minutes": 77, "seconds": 45}, "line": " Running SystemPropertiesAdvanced.exe, which elevates and executes our dll"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 1, "seconds": 4}, "line": " Begin of recon"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 4, "seconds": 41}, "line": " Exploring the web page on port 80"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 6, "seconds": 2}, "line": " Using wfuzz to do a special character fuzz to identify odd behavior and discover command injection"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 11, "seconds": 6}, "line": " Creating a hotkey in Burpsuite to send requests in repeater pane"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 11, "seconds": 50}, "line": " Start of creating a python program to automate this"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 17, "seconds": 30}, "line": " Script finished"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 18, "seconds": 30}, "line": " Exploring /var/appsrv "}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 21, "seconds": 15}, "line": " Exploring authpf"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 22, "seconds": 30}, "line": " Hunting for the signing key for the CA to view HTTPS"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 24, "seconds": 40}, "line": " Copying the certificates to our box"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Creating and signing a Client Certificate"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Importing the certificate into FireFox"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 30, "seconds": 49}, "line": " Discovering the reason our certificate isn't working (time of server is behind)"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 31, "seconds": 50}, "line": " Accessing the HTTPS Website to get a SSH key for NFSUSER"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 33, "seconds": 40}, "line": " Discovering additional ports are open after using SSH with NFSUSER"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 34, "seconds": 45}, "line": " Installing the NFS-COMMON package to get the showmount binary"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 35, "seconds": 10}, "line": " Mounting a NFS Share with Version 2"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 36, "seconds": 0}, "line": " Editing our User ID on our box to gain access to the NFS Directories"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Reading mail to discover that the root password is set to the Postgres databases root pw"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 37, "seconds": 30}, "line": " Testing if we could setup a SetUID Binary with this NFS (Check Jail Video for this being successful)"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 40, "seconds": 20}, "line": " SSH into the box as Charlie and dumping the database"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 43, "seconds": 40}, "line": " Exploring the source code to the web application"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 47, "seconds": 0}, "line": " Copying the crypto python script to our box, which will let us decrypt it"}, {"machine": "Fortune", "videoId": "_BLd046r-co", "timestamp": {"minutes": 47, "seconds": 40}, "line": " Copying the secrets into the crypto python script and decrypting the password"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Support me on Patreon! https://patreon.com/ippsec"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 0, "seconds": 52}, "line": " Start of Recon, discovering CentOS Version via HTTPD Version"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 2, "seconds": 15}, "line": " Checking out the HTTP Page"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 3, "seconds": 32}, "line": " Checking out login.php"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 5, "seconds": 15}, "line": " Identifying a Secure Token is used, most likely STOKEN"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 7, "seconds": 5}, "line": " Failing to enumerate usernames through BruteForce"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 9, "seconds": 45}, "line": " Fuzzing the login form with special characters to identify a blacklist"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 11, "seconds": 45}, "line": " Trying Double URL Encoding to bypass the BlackList"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 12, "seconds": 55}, "line": " Explaining Double URL Encoding"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Discovering this is most likely a LDAP Injection"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 16, "seconds": 50}, "line": " Explaining how a LDAP Query Works"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 19, "seconds": 15}, "line": " Identifying the LDAP Query Structure with a Null Byte"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 20, "seconds": 40}, "line": " Injecting the WildCard (*) to enumerate usernames"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 24, "seconds": 0}, "line": " Using Wfuzz to extract the username"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Enumerating LDAP Attributes that are utilized"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 30, "seconds": 26}, "line": " Creating a python script to extract the Pager Attribute"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 41, "seconds": 38}, "line": " Script complete, lets extract the token"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 43, "seconds": 45}, "line": " Using STOKEN to generate the OTP and logging in"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Disabling NTP so we can math the server time"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 46, "seconds": 44}, "line": " Discovery of that second half of the original LDAP Query at 16 minutes."}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 47, "seconds": 33}, "line": " Using a Null Byte to remove the GROUP Check."}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 50, "seconds": 33}, "line": " Running Commands"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 50, "seconds": 25}, "line": " Reverse Shell Returned"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 53, "seconds": 17}, "line": " Checking for the LDAP Bind password, then SSHing into the box"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 55, "seconds": 0}, "line": " Going over the /backup directory"}, {"machine": "CTF", "videoId": "51JQg202csw", "timestamp": {"minutes": 58, "seconds": 20}, "line": " Using ListFiles to have 7za print our the contents of root.txt"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 1, "seconds": 5}, "line": " Start of nmap"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Attempting to execute an VSFTPD Backdoor via MSF"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 3, "seconds": 40}, "line": " Discovering the backdoor opened 6200, discovering a weird shell"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 4, "seconds": 50}, "line": " Lets figure out what just happened"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Triggering the backdoor without Metasploit"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 9, "seconds": 5}, "line": " Exploring the Psy PHP Shell opened up by the backdoor"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 10, "seconds": 20}, "line": " Several functions for executing bash aren't working, checking disable_functions"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 11, "seconds": 40}, "line": " Attempting to bypass disabled_functions (does not work)"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 12, "seconds": 50}, "line": " Using ScanDir() and File_Get_Contents(), to explore the filesystem"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 14, "seconds": 50}, "line": " Identifying we are probably running as the Dali User (Unintended Path)"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 17, "seconds": 0}, "line": " Downloading CA.KEY, which is a private key to a webserver"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 21, "seconds": 40}, "line": " Using the CA.KEY to generate client certificates to access the HTTPS Page"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 30, "seconds": 25}, "line": " Weird it didn't work, lets just verify all our certificates are good"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 32, "seconds": 28}, "line": " This time it worked! We connected to the server"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 33, "seconds": 20}, "line": " Failing to add the certificate to BurpSuite"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 33, "seconds": 50}, "line": " Discovering File Traversal by editing the PATH variable"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 36, "seconds": 38}, "line": " Discovering the LFI just puts the path as Base64 Encoded"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 37, "seconds": 15}, "line": " Using the LFI to download the SSH Private Key"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 38, "seconds": 45}, "line": " Testing SSH Key against users on the box to gain access!"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 39, "seconds": 13}, "line": " UNINTENDED: Skipping the HTTPS Certificate - Generating SSH Keys to upload via PHP Shell"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 40, "seconds": 30}, "line": " UNINTENDED: Using file_put_contents() to append our public key to authorized_keys"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 41, "seconds": 30}, "line": " UNINTENDED: Using SSH to tunnel through Dali (SOCKS Proxy)"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 42, "seconds": 30}, "line": " UNINTENDED: Scanning ports on Dali that are listening on LocalHost"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 43, "seconds": 8}, "line": " UNINTENDED: Port 8000 is open, and its one step after the Reverse_Proxy that performs SSL Authentication!"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 45, "seconds": 35}, "line": " Running PSPY and LinEnum"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 50, "seconds": 20}, "line": " Using PSPY to view FileSystem Events which will show the cron"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 52, "seconds": 30}, "line": " Taking control of ~/memcached.ini because we own the folder!"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 54, "seconds": 45}, "line": " Exploiting the cron that utilizes memcached.ini to get a root shell"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- Bonus"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 55, "seconds": 55}, "line": " Exploring how the SSL Authentication is working"}, {"machine": "LaCasaDePapel", "videoId": "OSRCEOQQJ4E", "timestamp": {"minutes": 60, "seconds": 0}, "line": " Exploring how the VSFTPD Backdoor was modified."}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Begin of Recon"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 4, "seconds": 10}, "line": " Running SMBMap to identify and crawl file shares"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 5, "seconds": 0}, "line": " Downloading creds.txt from an smb share and checking FTP/SMB"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Checking the webpage and grabbing potential DNS Names for the box"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 10, "seconds": 40}, "line": " Using dig to perform a DNS Zone Transfer to obtain additional host names"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Adding all hostnames to /etc/hosts"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 12, "seconds": 55}, "line": " Running Aquatone to take screenshots of all the pages for quick examination"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 15, "seconds": 15}, "line": " Testing Uploads.Friendzone.red"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 16, "seconds": 30}, "line": " Testing admin.friendzone.red"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 17, "seconds": 0}, "line": " Testing administrator1.friendzone.red, logging in with creds found from SMB"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 18, "seconds": 35}, "line": " Found an LFI in the Dashboard.PHP script (PageName Variable)"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 20, "seconds": 15}, "line": " Using PHP Wrappers with the LFI To obtain PHP Script Source"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Revisiting recon to find ways to upload files, end up using SMBClient"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 25, "seconds": 10}, "line": " Gaining code execution through the LFI Exploit and SMB File Share"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Reverse Shell Returned"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Exploring /var/www/html to see if any troll directories had useful files in them, find creds to Friend user"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 31, "seconds": 20}, "line": " Running PSPY to identify cron jobs we don't have permission to see"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 33, "seconds": 15}, "line": " Running LinEnum.sh to enumerate the box and discover the Python OS Library is writeable"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 38, "seconds": 20}, "line": " Fixing our reverse shell by setting ROWS and COLUMNS of our terminal so we can use Vi"}, {"machine": "FriendZone", "videoId": "Zf8p49IzEEA", "timestamp": {"minutes": 40, "seconds": 45}, "line": " Placing a reverse shell in the Python OS library"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Support me on Patreon: https://patreon.com/ippsec"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Begin of Recon, discovery of an HTTP API that has a few commands"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Using JQ to parse json output, use NetStat/Proc to find GoPhish"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Logging into GoPhish with default creds admin:gophish, finding DNS Names"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 21, "seconds": 15}, "line": " Discovery of Obfuscated JavaScript Deobfuscating it to find a hidden section"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 33, "seconds": 20}, "line": " Using wfuzz to bruteforce the password for webadmin.php"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 37, "seconds": 10}, "line": " Finding Code Execution in WebAdmin.php"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 44, "seconds": 0}, "line": " Creating a Python Script to give a pseudo shell to cat, ls, and upload"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 70, "seconds": 45}, "line": " Script finished, uploading reGeorg to create a proxy onto the box to bypass FW"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 76, "seconds": 20}, "line": " Using WinRM to access low privilege shell as Simple User"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 85, "seconds": 8}, "line": " Exploring /Util/Scripts to find a way to privesc to Hacker"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 90, "seconds": 29}, "line": " Exploring GetSystem functionality of meterpreter"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 97, "seconds": 20}, "line": " Starting to create program to steal a token from NamedPipe Clients"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 101, "seconds": 0}, "line": " Creating XOR Encrypter for payloads in C (There is a bug used & instead of %)"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 108, "seconds": 20}, "line": " Using MSFVenom to generate raw payload to XOR then generate in C Format"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 111, "seconds": 38}, "line": " Creating the Stager to execute meterpreter, with some fun old AV Evasion tactics"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (Testing/Bug Hunting)"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 123, "seconds": 45}, "line": " Found the issue, AND'd the payload instead of XOR'd in encrypt.c"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 128, "seconds": 30}, "line": " Creating the NamedPipe portion of code"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 148, "seconds": 30}, "line": " Creating the Pipe Impersonation part of the code"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 163, "seconds": 16}, "line": " Had some weird errors, adding the ability to enable token privileges"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (more troubleshooting....)"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 181, "seconds": 0}, "line": " Editing the /util/scripts/clean.ini to execute our NamedPipe Creation File"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 186, "seconds": 10}, "line": " Meterpreter Session Loaded.  Unfortunately it grab the impersonation token, more troubleshooting."}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 188, "seconds": 20}, "line": " Found the bug that caused us to not pass the token"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 189, "seconds": 45}, "line": " Re-Explaining all the code"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 194, "seconds": 57}, "line": " Meterpreter loaded, using incognito to grab our impersonation token for HACKER user"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - https://googleprojectzero.blogspot.com/2016/03/exploiting-leaked-thread-handle.html"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 210, "seconds": 15}, "line": " Creating a bat file to run NetCat and upload into /util/scripts/spool which gets executed"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 215, "seconds": 50}, "line": " Start of looking at UserLogger Service, download it, un-UPX it"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 221, "seconds": 30}, "line": " Using ProcessMonitor to Dynamically Analyze the UserLogger binary (think of strace on windows)"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 229, "seconds": 40}, "line": " UserLogger lets us write binaries as SYSTEM with 777 permissions! Lets chain Diagnostic Hub Exploit"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 232, "seconds": 0}, "line": " Changing CMDLine in FakeDLL and valid_dir in Diaghub_exploit.cpp"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (Tons of trouble shooting)"}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 258, "seconds": 5}, "line": " Changing from DEBUG mode to RELEASE mode for compiling.  Which fixes it."}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 265, "seconds": 15}, "line": " Root.txt is hidden behind alternate data streams."}, {"machine": "HackBack", "videoId": "B9nozi1PrhY", "timestamp": {"minutes": 267, "seconds": 39}, "line": " ALTERNATE PATH THAT LETS YOU SKIP NAMEDPIPE STUFF"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Begin of Recon"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Searching for good files to view via FTP"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Nothing really found, searching for where PRTG creation file is"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 14, "seconds": 34}, "line": " Backup configuration found!"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 16, "seconds": 20}, "line": " Logging in by incrementing the password from 2018 to 2019"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 17, "seconds": 55}, "line": " Searching for CVE's"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 19, "seconds": 45}, "line": " Searching for where to send notification emails like CVE Said"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Testing for Command Injection via Cmd"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 22, "seconds": 20}, "line": " Testing for Command Injection via Powershell"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Getting a reverse shell"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 26, "seconds": 55}, "line": " Encoding powershell in Base64 to eliminate potential bad characters"}, {"machine": "Netmon", "videoId": "ZxvgniJXbOo", "timestamp": {"minutes": 29, "seconds": 10}, "line": " Getting a reverse shell"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 0, "seconds": 50}, "line": " Begin of Reocn"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 3, "seconds": 30}, "line": " Using SMBMap to enumerate fileshares"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Discovering an Excel Macro File"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 9, "seconds": 25}, "line": " Using olevba to extract macro from the document to discover credentials"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 11, "seconds": 15}, "line": " Using MSSQLClient.py from Impacket to log into the SQL Server"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 12, "seconds": 15}, "line": " Doing the SQL CMD:XP_DIRTREE to read a file off a UNC Share to steal the hash with Responder"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 13, "seconds": 15}, "line": " Cracking the NetNTLMv2 Hash"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 14, "seconds": 11}, "line": " Explaining the Responder Database file to view previously captured hashes"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 16, "seconds": 30}, "line": " Logging into the SQL Server with the cracked account, then doing XP_CMDSHELL to run commands"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 17, "seconds": 50}, "line": " Getting a Nishang Reverse Shell"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 22, "seconds": 0}, "line": " Running PowerUp, doing Invoke-ServiceAbuse and discovering creds in an old Group Policy Object"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ** For some reason the user created with Invoke-ServiceAbuse cannot write to C$ so no psexec :("}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 26, "seconds": 30}, "line": " Going back to the password disclosed via Group Policy and discovering they are an administrator"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 28, "seconds": 0}, "line": " Explaining how the PowerUp module decrypted a password out of Group Policy"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 29, "seconds": 10}, "line": " Getting VIM to highlight the syntax of Powershell"}, {"machine": "Querier", "videoId": "d7ACjty4m7U", "timestamp": {"minutes": 34, "seconds": 50}, "line": " Rooting the box with Invoke-ServiceAbuse"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Begin of Recon"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 4, "seconds": 15}, "line": " Adding DNS Names to /etc/hosts"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 5, "seconds": 20}, "line": " Using Aquatone to take HTTP Screenshots of a bunch of pages"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 11, "seconds": 0}, "line": " Start of looking at FreeFlujab.htb"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 15, "seconds": 40}, "line": " Looking at HTTP Cookies we send"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 17, "seconds": 40}, "line": " Editing Cookies in Firefox"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 19, "seconds": 50}, "line": " Discovering SMTP_CONFIG, which lets us change where the mail server is"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 21, "seconds": 50}, "line": " Using FireFox to remove character restrictions on a page"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 24, "seconds": 15}, "line": " The WebPage kept resetting our cookie, using Burp to auto replace"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Standing up a SMTP Server in python to read mail"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 30, "seconds": 20}, "line": " Discovering SQL Injection"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 34, "seconds": 50}, "line": " SQL Injection confirmed, testing Union Injections"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 37, "seconds": 40}, "line": " Creating a Python Script to aid us in running SQL Injections"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 37, "seconds": 40}, "line": " Script: Running a SMTP Server in background thread"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 41, "seconds": 35}, "line": " Script: Adding ability to use arrow keys to go to previous command"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 46, "seconds": 42}, "line": " Script: Making our command prompt send HTTP Requests"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 52, "seconds": 40}, "line": " Dumping database structure from INFORMATION_SCHEMA"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 65, "seconds": 0}, "line": " Dumping information out of the VACCINATIONS Table"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 67, "seconds": 50}, "line": " User information dumped, cracking a sha256 hash"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 71, "seconds": 0}, "line": " Accessing a new HOSTNAME from the database (sysadmin-console-01)"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 76, "seconds": 0}, "line": " Logging into Ajenti"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 77, "seconds": 0}, "line": " Discovering Notepad can read files from the server"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 84, "seconds": 10}, "line": " Looks like there was a SSH Key Compromise on the box from a README File"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 87, "seconds": 40}, "line": " Searching the compromised debian keys for one on the box"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 89, "seconds": 48}, "line": " Able to SSH Into the box with the Key! However we are in restricted bash"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 90, "seconds": 30}, "line": " rBash escape 1: Using GTFOBins to find a way to escape restricted bash"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 92, "seconds": 30}, "line": " rBash escape 2: Using -t bash argument in SSH to escape restricted bash"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 93, "seconds": 30}, "line": " Exploiting an old version of Screen to PrivEsc!"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " * Second way to get a shell on the box *"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 103, "seconds": 40}, "line": " Creating files in /home/sysadm"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 106, "seconds": 40}, "line": " SSH is configured to allow public keys to also be placed in ~/access "}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 108, "seconds": 0}, "line": " Reading Ajenti Documentation to see API lets us change file permissions"}, {"machine": "Flujab", "videoId": "_f9Xygr-qHU", "timestamp": {"minutes": 110, "seconds": 0}, "line": " Ajenti wants the CHMOD Number to be in a weird format"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 0, "seconds": 49}, "line": " Begin of recon"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 1, "seconds": 45}, "line": " Running gobuster to find /support"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Searching for a way to find version of HelpdeskZ"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 3, "seconds": 35}, "line": " Reading over the File Upload exploit script to see it requires server time"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 5, "seconds": 10}, "line": " Uploading a PHP Reverse Shell Script"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 7, "seconds": 45}, "line": " Going back to GitHub to find where uploads are saved"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 9, "seconds": 10}, "line": " Begin of modifying the script to pull the server time out of HTTP Headers"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 10, "seconds": 30}, "line": " Figuring out the python to pull the \"Date\" HTTP Header"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 14, "seconds": 30}, "line": " Getting the Time Format right with STRFTIME.COM"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 19, "seconds": 40}, "line": " Testing out the exploit and getting a shell"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 23, "seconds": 20}, "line": " Discovery of an old kernel, looking for an exploit"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 24, "seconds": 30}, "line": " Copying the exploit, compiling, and privesc!"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Looking into port 3000"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 27, "seconds": 0}, "line": " /graphql discovered"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 27, "seconds": 42}, "line": " Dumping the schema to discover what data is inside"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 30, "seconds": 15}, "line": " Dumping username, password from the database"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 32, "seconds": 12}, "line": " Logging into HelpdeskZ"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 33, "seconds": 40}, "line": " Discovering the Boolean SQL Injection"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 34, "seconds": 50}, "line": " Running SQLMap"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 36, "seconds": 0}, "line": " Explaining the Injection"}, {"machine": "Help", "videoId": "XB8CbhfOczU", "timestamp": {"minutes": 37, "seconds": 10}, "line": " Begin of creating a python script to exploit this"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 1, "seconds": 4}, "line": " Begin of Recon"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 6, "seconds": 45}, "line": " Checking the web interfaces"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 7, "seconds": 20}, "line": " Discovering there is a Certificate Authority"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 8, "seconds": 50}, "line": " Taking a look at LDAP"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 10, "seconds": 55}, "line": " Examining SMB to find shares"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Searching the Operations and Department Shares"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 14, "seconds": 50}, "line": " Viewing permissions of a SMB Share with SMBCACLS"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 19, "seconds": 10}, "line": " Discovering a writeable share, dropping a SCF File to get a hash"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 22, "seconds": 4}, "line": " Using Hashcat to crack NetNTLMv2"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 24, "seconds": 40}, "line": " Using SMBMap to identify if this user has access to anything extra"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 25, "seconds": 40}, "line": " Discovering the CertSRV Directory "}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 28, "seconds": 0}, "line": " Discovering Powershell Remoting"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 30, "seconds": 0}, "line": " Error from WinRM (Need SSL)"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Using openSSL to generate a private key"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 31, "seconds": 52}, "line": " Going to /CertSRV to sign our certificate as Amanda"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 34, "seconds": 0}, "line": " Adding the SSL Authentication to WinrM"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 35, "seconds": 15}, "line": " Playing with LDAP Again (with the Amanda Creds)"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 37, "seconds": 50}, "line": " Shell on the box with WinRM as Amanda"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 38, "seconds": 15}, "line": " Running SharpHound"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 40, "seconds": 29}, "line": " Applocker is on the box, lets move it in the windows directory "}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 42, "seconds": 0}, "line": " Trying to get the bloodhound data off the box."}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 44, "seconds": 20}, "line": " Starting bloodhound "}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 45, "seconds": 27}, "line": " File didn't copy lets load up Covenant"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 49, "seconds": 30}, "line": " Covenant is up and running - Create a HTTP Listener"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 50, "seconds": 30}, "line": " Hosting a Launcher"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 52, "seconds": 30}, "line": " Getting a grunt"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 54, "seconds": 40}, "line": " Running SeatBelt"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 57, "seconds": 0}, "line": " Running SharpHound"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 60, "seconds": 0}, "line": " Finally uploading the bloodhound data"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 61, "seconds": 18}, "line": " Running Bloodhound with all Collection Methods"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 65, "seconds": 15}, "line": " Discovering the MRLKY can DCSYNC"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 67, "seconds": 25}, "line": " Cannot kerberoast because of the Double Hop Problem, create token with MakeToken"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 72, "seconds": 30}, "line": " Cracked the Kerberoasted Hash, doing maketoken with mrlky and running DCSYnc"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 74, "seconds": 40}, "line": " Running WMIExec to get Administrator"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 82, "seconds": 0}, "line": " UNINTENDED Method 1: Amanda can write to Clean.bat"}, {"machine": "Sizzle", "videoId": "YVhlfUvsqYc", "timestamp": {"minutes": 84, "seconds": 30}, "line": " UNINTENDED Method 2: Forensic artifacts leave MRKLY Hash in C:\\windows\\system32\\file.txt"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Begin of recon"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 2, "seconds": 54}, "line": " Checking SNMP with snmpwalk"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 3, "seconds": 29}, "line": " Discovering a Hashed PSK (MD5) in SNMPWalk, searching the internet for a decrypted value"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 4, "seconds": 18}, "line": " Getting more SNMP Information with snmp-check"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 7, "seconds": 35}, "line": " Going over UDP Ports discovered by snmp-check"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 10, "seconds": 55}, "line": " Running ike-scan"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 11, "seconds": 55}, "line": " Examining ike-scan results to build a IPSEC Config"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 13, "seconds": 50}, "line": " Installing Strongswan (IPSEC/VPN Program)"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 14, "seconds": 19}, "line": " Adding the PSK Found earlier to /etc/ipsec.secrets"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 15, "seconds": 30}, "line": " Begin configuring /etc/ipsec.conf"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 20, "seconds": 8}, "line": " Starting and debugging ipsec"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 21, "seconds": 55}, "line": " Explaining why we add TCP to strongswan config"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 24, "seconds": 0}, "line": " Starting IPSEC, then using NMAP through IPSEC."}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (You may want to run WireShark here and see all traffic is encrypted thanks to ipsec)"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 25, "seconds": 55}, "line": " Enumerating SMB Quickly (SMBMap/cme)"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 26, "seconds": 50}, "line": " Enumerating FTP, discovering we can upload files"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 27, "seconds": 20}, "line": " Checking HTTP, hunting for our uploaded file.  Then uploading files that may lead to code execution"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 29, "seconds": 44}, "line": " Grabbing an ASP Webshell from Github/tennc/webshell"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 32, "seconds": 8}, "line": " Webshell has been uploaded"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 32, "seconds": 30}, "line": " Explaining a weird MTU Issue you *may* run into due to the nested VPN's"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 35, "seconds": 40}, "line": " Back to playing with the web shell, getting a reverse shell with Nishang"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 38, "seconds": 3}, "line": " Explaining RLWRAP"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 38, "seconds": 40}, "line": " whoami /all shows SEImpersonation, so we run JuicyPotato to privesc"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 44, "seconds": 35}, "line": " JuicyPotato fails with the default CLSID, changing it up to get it working."}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 46, "seconds": 30}, "line": " Doing the box again with Windows"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 47, "seconds": 15}, "line": " Setting up the IPSEC Connection through Windows Firewall"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Installing a DotNet C2 (The Covenant)"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 54, "seconds": 20}, "line": " Covenant/Elite open, starting a Listener then a Powershell Launcher"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 60, "seconds": 10}, "line": " Grunt activated. Running Seatbelt, then compiling Watson and reflectively running it"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 65, "seconds": 0}, "line": " Grabbing the Sandbox Escaper ALPC Privesc"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 68, "seconds": 3}, "line": " Being lazy and compiling a CPP Rev Shell in Linux because it wasn't installed on Windows"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (bunch of flailing, then reverting the machine)"}, {"machine": "Conceal", "videoId": "1ae64CdwLHE", "timestamp": {"minutes": 85, "seconds": 35}, "line": " Box is reverted, trying the ALPC Exploit again"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Begin of recon, Nmap"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Taking the CentOS Apache Version to find major version"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 3, "seconds": 20}, "line": " Running GoBuster with a Common-PHP-Files wordlist."}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Enumerating Ldap with ldapsearch"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 7, "seconds": 30}, "line": " Discovery of Password Hashes within ldap information"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 10, "seconds": 55}, "line": " Attempting to crack the hashes. (does not crack)"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 12, "seconds": 30}, "line": " Back to the web page"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 13, "seconds": 15}, "line": " Page says to login with ip@Lightweight with the password of your ip"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 15, "seconds": 35}, "line": " Running LinEnum"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 20, "seconds": 15}, "line": " Discovery of Extended Capabilities set on tcpdump"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 20, "seconds": 50}, "line": " Performing a packet capture over SSH without touching disk"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 23, "seconds": 45}, "line": " Examining the pcap created, don't see anything on ens33"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 24, "seconds": 20}, "line": " Performing a packet capture through SSH and piping live results to WireShark"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Discovery of LDAP Traffic, ldapuser2 password passed in clear-text"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 28, "seconds": 15}, "line": " Using bash to exfil a file over the network (backup.7z)"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 29, "seconds": 25}, "line": " Using 7z2john and hashcat to crack a 7zip file"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 32, "seconds": 5}, "line": " Examining extracted files to discover a new credential (ldapuser1)"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 33, "seconds": 30}, "line": " The openssl binary in ldapuser1 has an empty capability (which is all)"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 35, "seconds": 0}, "line": " Using GTFOBins to see what we can do with openssl"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 37, "seconds": 11}, "line": " Reading /etc/shadow with openssl"}, {"machine": "LightWeight", "videoId": "yQgtDoCDAYk", "timestamp": {"minutes": 37, "seconds": 35}, "line": " Adding an entry into /etc/sudoers to allow us to escalate to root"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 1, "seconds": 5}, "line": " Begin of recon"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 2, "seconds": 20}, "line": " Starting up GoBuster then editing /etc/hosts to add the hosts in nmap"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 3, "seconds": 20}, "line": " Going over the website"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Discovering a wordpress instance (/wp/ form goBuster)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Finding webmail credentials from a wordpress Protected Post"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 10, "seconds": 30}, "line": " Discovering webmail.chaos.htb (Method 1)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 12, "seconds": 50}, "line": " Testing IMAP, then configuring Evolution to login to the mail server (Method 2)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 16, "seconds": 40}, "line": " Decrypting the message that was in the draft."}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 22, "seconds": 55}, "line": " Message decrypted, new page discovered"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 23, "seconds": 11}, "line": " Discovering a webpage for creating pdfs"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 24, "seconds": 10}, "line": " Searching for a code injection path for LaTex"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 24, "seconds": 45}, "line": " Discovering the blacklist is on \"input\""}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 25, "seconds": 30}, "line": " Testing for blind command execution via ping"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 27, "seconds": 43}, "line": " Reverse Shell Returned"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 28, "seconds": 10}, "line": " Enumerating the web directory to find passwords"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 29, "seconds": 11}, "line": " Switching to the \"Ayush\" user with mail password, discover we are in rBash"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 29, "seconds": 45}, "line": " Escaping rBash by via tar (Method 1: GTFOBins)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Escaping rBash by editing path (Method 2)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 32, "seconds": 55}, "line": " Discovering a mozilla user configuration directory, copying it off to export passwords"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 36, "seconds": 30}, "line": " Using firefox_decrypt to export root password"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 37, "seconds": 30}, "line": " Logging into webmin with credentials from firefox"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 37, "seconds": 50}, "line": " Privesc via switching to root user with known password (Method 1)"}, {"machine": "Chaos", "videoId": "no9UnySBQrU", "timestamp": {"minutes": 38, "seconds": 10}, "line": " Using webmin to execute commands as root (Method 2)"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 1, "seconds": 10}, "line": " Begin of Nmap"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 4, "seconds": 45}, "line": " Pulling important information from the website"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Discovering DNS Names, adding stuff to /etc/hosts"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 18, "seconds": 30}, "line": " Odd behavior with code.bighead.htb, redirects us to 127.0.0.1; change that with Burp"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Using wfuzz to dirbust, with the ability to see HTTP Codes (hunting for 418)"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Found BigHead Web Server on Github, pulling Zips and cracking"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 36, "seconds": 40}, "line": " Before reversing the binary, keep hunting for information about the OS"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 43, "seconds": 40}, "line": " Discovering PHPInfo within the PhpMyAdmin directory, has OS."}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Installing Immunity and Mona"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 47, "seconds": 30}, "line": " Grabbing MinGW so we can run the Bighead Webserver"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 55, "seconds": 40}, "line": " Crashing the webserver, seeing we have"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 60, "seconds": 0}, "line": " Sending a pattern to the box and examining the stack to see where our overwrites are"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 66, "seconds": 15}, "line": " Validating we know where all our overwrites are (EAX,EBX,EIP,ESP)"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 70, "seconds": 6}, "line": " Explanation of EggHunters"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 76, "seconds": 5}, "line": " Grabbing the shellcode we want, then adding it to our exploit script"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 84, "seconds": 50}, "line": " Validating our exploit is working as we intended by setting a break point on JMP ESP"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 87, "seconds": 0}, "line": " Our box complains about DEP, lets disable that on our OS and hope its disabled on target"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 90, "seconds": 0}, "line": " Running the exploit against the target and getting a shell back!"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 95, "seconds": 0}, "line": " Searching the registry (HKLM) for \"password\""}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 97, "seconds": 0}, "line": " Dumping information about services on the box (HKLM\\System\\CurrentControlSet\\Services)"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 98, "seconds": 15}, "line": " Discovery of NGINX password, then looking at ports listening on localhost"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 101, "seconds": 8}, "line": " Found SSH Listening on 127.0.0.1:2020, Setting up a reverse tunnel with Chisel"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 105, "seconds": 10}, "line": " SSH into nginx@Bighead over port 2020, land in an extremely restricted shell"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 110, "seconds": 30}, "line": " Searching for vulnerable PHP Code, discovering testlink"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 122, "seconds": 55}, "line": " Exploiting an LFI Vulnerability"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 127, "seconds": 0}, "line": " Using Netcat to get a reverse shell"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 136, "seconds": 10}, "line": " Looking at the KeePass Configuration File to see where the KDBX and Key is"}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 138, "seconds": 55}, "line": " A bunch of pain trying to get data off the Alternate Data Stream."}, {"machine": "Bighead", "videoId": "VBt-CmjMYiM", "timestamp": {"minutes": 151, "seconds": 30}, "line": " Finally got the KDBX back to my box, then crack the KeePass file"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Last video was missing about 2 minutes and cut off at 31:35.  Sorry, was an extremely busy week and didn't get to verify everything was good."}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 0, "seconds": 39}, "line": " Begin on Recon"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 1, "seconds": 39}, "line": " Starting a full nmap scan "}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 4, "seconds": 15}, "line": " Discovery of IRC"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 4, "seconds": 35}, "line": " Manually looking at IRC"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Looking at the IRC to understand how to connect to an IRC Server"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Pulling the IRC Version and discovering the exploit"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 8, "seconds": 50}, "line": " Going into the history of the IRC Backdoor"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 9, "seconds": 45}, "line": " Manually exploiting the IRC Server"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 13, "seconds": 10}, "line": " Shell returned on the server"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 14, "seconds": 30}, "line": " Discovery of .backup which gives a steg password"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Logging in with djmardov"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 21, "seconds": 20}, "line": " Discovery of SetUID enabled custom binary, viewuser"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 23, "seconds": 25}, "line": " Using ltrace to see what the binary does, executes the file /tmp/listusers"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Getting a root shell"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Testing exploiting the binary with \"who\", fails due to no setuid"}, {"machine": "Irked", "videoId": "OGFTM_qvtVI", "timestamp": {"minutes": 27, "seconds": 50}, "line": " Looking at the binary within Ghidra"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 0, "seconds": 40}, "line": " Begin of recon"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Poking around at the website to identify what techologies it utilizes"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 2, "seconds": 30}, "line": " Discovering something odd about images/5.png"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 3, "seconds": 25}, "line": " Downloading 5.png to discover it is a text file with a portion of a password"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Finding a place to login (/moodle), attempt to enumerate valid usernames"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 8, "seconds": 0}, "line": " Using wfuzz to bruteforce the password"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 11, "seconds": 20}, "line": " Looking for a way to enumerate Moodle Versions"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 13, "seconds": 20}, "line": " Searching for exploits for this version and finding \"Bad Teacher\""}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 14, "seconds": 40}, "line": " Start of manually exploiting this vulnerability"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 16, "seconds": 0}, "line": " Adding a \"Calculated Question\" which has the formula (vulnerable) parameter"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 20, "seconds": 16}, "line": " Finding artifacts of creating/testing the machine which spoils what we are supposed to do"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 24, "seconds": 21}, "line": " Fixing our forumla to allow for code execution"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 28, "seconds": 30}, "line": " Getting a reverse shell"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 30, "seconds": 0}, "line": " Looking around the MySQL Database to discover hashes of other users"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 31, "seconds": 52}, "line": " The account Giovannibak stands out due to the hash being just MD5"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 32, "seconds": 30}, "line": " Attempting the password (expelled) of the MD5 hash above to login to \"Su\" to Giovannibak"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 36, "seconds": 20}, "line": " Grabbing and compiling pspy to find a cronjob"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 38, "seconds": 30}, "line": " Running PSPY to discover /usr/bin/backup.sh"}, {"machine": "Teacher", "videoId": "u2-te8n2WbY", "timestamp": {"minutes": 40, "seconds": 0}, "line": " Abusing the backup cron to have it chmod 777 /etc/shadow (could do anything, sudoers is a bit less noisy)"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " More detailed notes: https://gist.github.com/IppSec/137a9f8870bed2763048072f321073e5"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 0, "seconds": 50}, "line": " My Vulnerability Assessment methodology"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Starting a Nessus Scan to see what it thinks"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 4, "seconds": 20}, "line": " Running nmap and deciding what ports are needed"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 9, "seconds": 35}, "line": " Reviewing the Nessus Scan"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 12, "seconds": 2}, "line": " Examining what leaving KSQL/Kafka (8088) open can do"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 13, "seconds": 58}, "line": " Using iptables to block ports that don't need to be routable"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 15, "seconds": 53}, "line": " Preventing NMAP from detecting the port as filtered, doing REJECT --reject-with tcp-reset"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 18, "seconds": 30}, "line": " Using Draw.io to explain what we are doing with a Reverse Proxy"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 20, "seconds": 40}, "line": " Installing Apache2"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 21, "seconds": 33}, "line": " Creating the reverse proxy HTTPS Configuration, then enabling modules ssl, proxy, proxy_http"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 25, "seconds": 10}, "line": " Our Apache Server doesn't like self-signed certificate of remote server adding:"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- SSLProxyVerify, SSLProxyCheckPeerCN, SSLProxyCheckPeerName, SSLProxyCheckPeerExpire"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 28, "seconds": 44}, "line": " Enabling Universe Repo then installing mod-security"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 29, "seconds": 50}, "line": " Briefly going over the mod-security configuration file"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 32, "seconds": 35}, "line": " Setting ModSecurity to blocking mode then modifying the rules to allow Kibana to work"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 36, "seconds": 25}, "line": " ModSecurity doesn't like \"application/x-ndjson\", adding this to the allowed content types"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 40, "seconds": 13}, "line": " Beginning of creating a Certificate Authority to handle Mutual SSL Authentication"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 42, "seconds": 20}, "line": " Creating the CA Private/Public Keys with OpenSSL"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 44, "seconds": 11}, "line": " Creating the WebServer's private key with OpenSSL, then signing"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Creating the users private key with OpenSSL, then signing"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 47, "seconds": 20}, "line": " Copying the Webserver's keys to the reverse proxy, then updating Apache2 to use the certs"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 49, "seconds": 50}, "line": " Showing the SSL is working by adding the CA to firefox and checking if cert warnings go away"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 51, "seconds": 10}, "line": " Configuring Apache to force SSL Client Authentication which requires user certificates"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 52, "seconds": 0}, "line": " Creating the PFX File in order to allow Firefox to import our user certificate"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 53, "seconds": 0}, "line": " Demonstrating SSL Mutual Authentication is working"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 53, "seconds": 30}, "line": " Modifying iptables on HELK to only allow HTTP/HTTPS Connections from the Reverse Proxy"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 56, "seconds": 0}, "line": " Making the iptable rules on HELK persistent"}, {"machine": "Teacher", "videoId": "2OWtEymBQfA", "timestamp": {"minutes": 56, "seconds": 40}, "line": " Uh-oh we forgot to do rules on IPv6, which allows for a firewall bypass.  Let's just disable IPv6."}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 20}, "line": " Flow chart of potential paths through this box"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 2, "seconds": 25}, "line": " Begin of recon, SSL Enumeration, examining PHP Behavior"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 6, "seconds": 23}, "line": " Using GoBuster to dicover directories, pdf's, and php scripts"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 8, "seconds": 10}, "line": " Using wfuzz to discover subdomains (virtual host routing)"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 12, "seconds": 15}, "line": " Guessing credential, logging in with guest:guest disover SQL Injection"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Manually doing an error-based SQL Injection with extractquery()"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ** Go watch the Enterprise Video if you want Double Query Based Errors **"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 31, "seconds": 50}, "line": " A good screenshot showing the SQL Inject Queries used, then cracking"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 35, "seconds": 0}, "line": " Doing the SQLInjection with SQLMap, needed the delay flag!"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ** Going back to start of box"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 37, "seconds": 50}, "line": " Examining the account-signup.pdf to create a user"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 39, "seconds": 50}, "line": " Doing XSS (cross site scripting) to steal a cookie of  the admin"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 43, "seconds": 15}, "line": " Going to admin.redcross.htb and showing that any way you got the PHPSESSID cookie would work"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 46, "seconds": 15}, "line": " Poking at admin.redcross.htb, creating a user that lands us in an SSH Jail"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 48, "seconds": 38}, "line": " Playing with the Firewall portion of the site, discover command injection in deleting rules!"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 52, "seconds": 28}, "line": " Reverse shell as www-data"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 54, "seconds": 40}, "line": " Discover postgresql credentials in actions.php, this database lets you create users!"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 60, "seconds": 21}, "line": " Inserting a user into the database, then logging in with SSH"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 62, "seconds": 40}, "line": " Examining /etc to discover a different postgresql account-signup"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 64, "seconds": 50}, "line": " Adding a root user with the new credentials, then sudo to root!"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " *** Going back to just adding our IP to the whitelist in firewall"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 66, "seconds": 29}, "line": " Discovering Haraka running"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 69, "seconds": 10}, "line": " Using Metasploit to exploit haraka, get shell as penelope"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 72, "seconds": 26}, "line": " Doing the PG thing again but this time specify sudo group, so we don't need to use the other PG account."}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " *** Going back, lets do the overflow! No postgres at all"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " * Go watch Bitterman if this is confusing"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 75, "seconds": 50}, "line": " Examining iptctl.c"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 79, "seconds": 56}, "line": " Using Pattern_Create to discover where the RSP (RIP) Overwrite occours."}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 81, "seconds": 15}, "line": " Start of python script"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 84, "seconds": 11}, "line": " Dumping PLT Functions to use with our rop chain (no aslr on binary)"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 88, "seconds": 0}, "line": " Getting pop gadgets with radare"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 89, "seconds": 40}, "line": " Building our ROP Chain"}, {"machine": "Redcross", "videoId": "-GNyDEQ9UDU", "timestamp": {"minutes": 94, "seconds": 28}, "line": " Exploiting the binary! To get root."}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Explaining the HELK Architecture"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Showing my VM's Spec's/build"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Installing HELK "}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Poking around HELK's Logstash container to see how it works"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 8, "seconds": 40}, "line": " Examining HELK Elastalert to view sigma rules"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 9, "seconds": 8}, "line": " The magic behind catching APT! (sorry did it for the keywords)"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 11, "seconds": 58}, "line": " The SafetyKeyz Sigma rule, could easily be avoided"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 12, "seconds": 58}, "line": " Start of Windows"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 13, "seconds": 20}, "line": " Building a Sysmon Config with Sysmon-Modular"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - https://github.com/olafhartong/sysmon-modular"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 17, "seconds": 20}, "line": " Enabling Other Logging"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 18, "seconds": 0}, "line": " Enabling Command Line Logging with arguments"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - Computer/Windows/SecuritySettings/SecurityOptions/Audit: Force Audit policy"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - Computer/Windows/SecuritySettings/AdvancedAudit/DetailedTracking/AuditProcessCreate"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - Computer/AdminTemplates/System/AuditProcessCreation"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 20, "seconds": 0}, "line": " Enabling Powershell Module and Script Block Logging"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - Computer/AdminTemplates/WindowsComponents/WindowsPowershell/"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - Create Profile.ps1 in c:\\windows\\system32\\WindowsPowerShell\\v1.0"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- Variables: $LogCommandHealth and $LogCommandLifeCycleEvent = $true"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Enabling Task Scheduler History/Logging"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 23, "seconds": 25}, "line": " Downloading and installing WinLogBeat"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (If you have issues, try version 6.7 of WinLogBeat, 7 is now out and HELK is not ingesting)"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 27, "seconds": 5}, "line": " Logging into HELK and start of searching the logs!"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 28, "seconds": 45}, "line": " Searching Process Create Events (4688) and finding the commands we ran earlier"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 29, "seconds": 53}, "line": " Testing the Powershell logging to detect downloading and executing a script"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Detecting mimikatz accessing LSASS"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 39, "seconds": 40}, "line": " Deep dive into Mimikatz to identify how it accesses LSASS.EXE to create a signature, what is 0x1010 process grant?"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 44, "seconds": 30}, "line": " Showing the Process Creation stuff in real time."}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 47, "seconds": 25}, "line": " Examining the SysMon Dashboard"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 48, "seconds": 0}, "line": " Viewing the SIGMA Rules and how to clean up noisy ones."}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ** Really good blog post: https://posts.specterops.io/what-the-helk-sigma-integration-via-elastalert-6edf1715b02 **"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Deep dive into the SIGMA Rule setup"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 0, "seconds": 1}, "line": " - python -m elastalert.elastalert --debug --rule"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 51, "seconds": 30}, "line": " Discovering the mistake in the SIGMA to Elastalert conversion (realert:0)"}, {"machine": "Redcross", "videoId": "C2cgvpN44is", "timestamp": {"minutes": 52, "seconds": 0}, "line": " Debugging Elastalert Rules"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 1, "seconds": 8}, "line": " Begin of Recon"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 3, "seconds": 8}, "line": " Begin of GoBustering"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 7, "seconds": 15}, "line": " Discovery of an image upload script"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 8, "seconds": 39}, "line": " Attempting to bypass the upload filter"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 12, "seconds": 46}, "line": " Reverse Shell to ubuntu Returned.  Examining Web Source"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 15, "seconds": 28}, "line": " ALTERNATIVE: Checking out the host name pollution, setting host header to localhost"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 19, "seconds": 27}, "line": " Resume of poking around the host, discover passwords and other hosts in /home"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 23, "seconds": 14}, "line": " Uploading a static-compiled nmap to the box (static-binaries is a github repo)"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 24, "seconds": 57}, "line": " SSH Local Port Forward and Dynamic, to let our Kali box communicate with the next hop."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 27, "seconds": 27}, "line": " Discovery of a page that lets us create ovpn (openvpn) configs and test the VPN"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 28, "seconds": 45}, "line": " Think i broke the box here, sent unicode to the box.... It stops responding on web."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 32, "seconds": 55}, "line": " Machine reverted, getting back to where I started."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 34, "seconds": 50}, "line": " Trying this again, and get a shell on ubuntu -- Lets do a Reverse Port Forward to get a shell on our kali box."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 36, "seconds": 12}, "line": " Shell returned to Kali Box, explaining how to use socat if SSH Forward cannot listen on all ports."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 38, "seconds": 58}, "line": " Exploring the DNS Server box."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 39, "seconds": 26}, "line": " Finding a password in /home/dave/ssh"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 40, "seconds": 15}, "line": " Discovering Vault's IP Address in /etc/hosts"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 41, "seconds": 20}, "line": " Perfoming a NMAP on the vault box, discover two ports closed"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 41, "seconds": 50}, "line": " Doing a NMAP with the source port of one of the above ports to test for a lazy firewall, discover SSH on port 987"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 43, "seconds": 20}, "line": " ALTERNATIVE: Bypassing the firewall by using IPv6"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 49, "seconds": 47}, "line": " How to set the source port with SSH via ncat"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 50, "seconds": 45}, "line": " Discovering root.txt.gpg on Vault, it is encrypted with RSA Key D1EB1F03"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 51, "seconds": 35}, "line": " Dave has the above RSA Key, use SCP to send the file back to Ubuntu"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 54, "seconds": 45}, "line": " The file has been copied, using gpg to decrypt the file."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 55, "seconds": 39}, "line": " MAJOR UNINTENDED WAY: Discovering SPICE ports are listening on localhost:5900-5903, this is like VNC"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 57, "seconds": 5}, "line": " Using Remote-Viewer to connect to the SPICE Port and getting physical access to the machine."}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 57, "seconds": 42}, "line": " Rebooting Vault by sending the Ctrl+Alt+delete key"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 58, "seconds": 0}, "line": " Editing grub to get a root shell without a password"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 58, "seconds": 56}, "line": " Changing the password to root, then rebooting again"}, {"machine": "Vault", "videoId": "LfbwlPxToBc", "timestamp": {"minutes": 59, "seconds": 30}, "line": " Logging in with the new password."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 0, "seconds": 58}, "line": " Installing FireEye Commando to help keep our development environments sync'd"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 4, "seconds": 30}, "line": " Using Git to download mimikatz, openifang with Visual Studio 2017 and installing dependencies"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 8, "seconds": 50}, "line": " Verifying that we can compile mimikatz before we make any changes."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 11, "seconds": 15}, "line": " Creating an Antivirus Exception in Defender to ignore shared drive"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 12, "seconds": 30}, "line": " Remove String: mimikatz and then rename files with mimikatz in the name"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 13, "seconds": 45}, "line": " Remove String: all metadata by editing the RC File (accidentally wipe a quote)"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Replace Icon"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 16, "seconds": 0}, "line": " Test rebuilding after these changes."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 18, "seconds": 0}, "line": " Using \"head\" to split the binary in half to help identify where Defender is identifying mimikatz"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 19, "seconds": 0}, "line": " Tons of splitting."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 21, "seconds": 20}, "line": " Found a rough location of a bad string, opening in a hex editor to identify the string."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 22, "seconds": 30}, "line": " Appears to flag on KiwiAndRegistryTools, lets verify"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 24, "seconds": 10}, "line": " Search and replace for \"mimi\" (whoops, should of done kiwi here!)"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Remove String: KiwiAndRegistryTools"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 27, "seconds": 20}, "line": " Decompressing the Defender Signature File, this should speed up finding bad strings but i still need to do more research here."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 30, "seconds": 30}, "line": " Verifying KiwiAndRegistryTools is removed by testing it against Defender"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 32, "seconds": 0}, "line": " From here on... Tons of repetitive stuff to find other strings."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 42, "seconds": 45}, "line": " wdigest.dll is a bad character, lets see if its in a DLL Import or Print Statement."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 43, "seconds": 50}, "line": " Remove String: wdigest.dll"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 46, "seconds": 25}, "line": " Remove String: isBase64InterceptOutput, isBase64InterceptInput"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 52, "seconds": 25}, "line": " Remove String: multirdp"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 57, "seconds": 20}, "line": " Wow.  Just realized double clicking a program is a better way to test if an executable is malicious. Lol."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 59, "seconds": 50}, "line": " Remove String: logonPasswords "}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 66, "seconds": 0}, "line": " Remove String: credman"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 71, "seconds": 30}, "line": " Remove String: I_NetTrustPasswordsGet, this one is different due to being in the IMPORT table.  Use dumpbin /exports to show ordinal addresses"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 75, "seconds": 30}, "line": " Ordinal loading explained, kind of"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 76, "seconds": 45}, "line": " Creating a new lib file to do ordinal loading of netapi32 functions.  Create DEF file, then use lib to compile it."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 79, "seconds": 40}, "line": " Whoops, string isn't here because its I_NetTrust, not I_NetPass.  After this mistake, mimikatz is ran"}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 82, "seconds": 20}, "line": " Running Ghidra to view import tables to see how the ordinal loading works."}, {"machine": "Vault", "videoId": "9pwMCHlNma4", "timestamp": {"minutes": 87, "seconds": 0}, "line": " Lets just see what VirusTotal thinks of this binary."}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 1, "seconds": 12}, "line": " Begin of Recon"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 1, "seconds": 55}, "line": " Running Cewl to generate a wordlist"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Finding secret.txt in the HTML Source, which happens to be the password"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 3, "seconds": 28}, "line": " Runninh JoomScan so we have something running in the background"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 4, "seconds": 20}, "line": " Checking the manifest to get the Joomla Version"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 6, "seconds": 20}, "line": " Explaining what equals mean in base64"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 7, "seconds": 50}, "line": " Begin of hunting for Joomla Username"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 8, "seconds": 30}, "line": " BruteForcing Joomla Login with WFUZZ"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 10, "seconds": 35}, "line": " Troubleshooting by sending wfuzz through burp"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 12, "seconds": 25}, "line": " Turns out the CSRF Token is tied to cookie, adding that to the wfuzz command"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 17, "seconds": 10}, "line": " Success! Logged into Joomla"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 17, "seconds": 58}, "line": " Gaining code execution by modifying a template"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 20, "seconds": 20}, "line": " Getting a reverse shell"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 23, "seconds": 20}, "line": " Finding the file: password_backup which is encoded"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 23, "seconds": 55}, "line": " Extracting password_backup manually with xxd, zcat, bzcat, tar"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 25, "seconds": 43}, "line": " Extracting Password_Backup with CyberChef"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 27, "seconds": 35}, "line": " Logging in with Floris"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 28, "seconds": 17}, "line": " Looking at /home/floris/AdminArea"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Testing the input file by changing the url to us"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 29, "seconds": 30}, "line": " Getting LFI by using file:// within curl"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 30, "seconds": 38}, "line": " Pulling the cron, to see what is going on"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 31, "seconds": 25}, "line": " Cron shows curl -K to use curl with a config file, checking man page."}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 32, "seconds": 5}, "line": " Changing where curl saves to, in order to gain a root shell"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 33, "seconds": 45}, "line": " Showing another good file to read with the LFI (logs)"}, {"machine": "Curling", "videoId": "Paajc2Dupms", "timestamp": {"minutes": 34, "seconds": 18}, "line": " Using pspy to show when processes start/end, which shows the curl command with no exploits"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 1, "seconds": 16}, "line": " Begin of Recon, until around 13 minutes gathering information to avoid rabbit holes"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 4, "seconds": 4}, "line": " Using nc/ncat to verify a port is open (-zv)"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 11, "seconds": 17}, "line": " Doing gobuster across man of the sub directories"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 13, "seconds": 3}, "line": " Examining /admin/ - Examine the HTML Source because login is not sending any data"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 14, "seconds": 9}, "line": " Discover some weird text encoding (Ook), how I went about decoding it"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 15, "seconds": 44}, "line": " Decoded to base64 with some spaces, clean up the base64 and are left with a zip file"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 19, "seconds": 19}, "line": " After cracking the zip, there is another text encoding challenge (BrainF*)"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 25, "seconds": 11}, "line": " With potential information, return to our long running recon for more information"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 28, "seconds": 49}, "line": " Discovering /playsms"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 32, "seconds": 0}, "line": " Reading ExploitDB Articles and then attempting to manuall exploit PlaySMS via uploading a CSV"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 34, "seconds": 34}, "line": " Getting a reverse shell"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 39, "seconds": 0}, "line": " Running LinEnum.sh"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 40, "seconds": 0}, "line": " Finding the SetUID file: rop"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 42, "seconds": 0}, "line": " Exploiting ROP Program with ret2libc"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 45, "seconds": 30}, "line": " Getting offsets of system, exit, /bin/sh from libc using ldd, readelf, and strings"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 50, "seconds": 34}, "line": " Running our exploit to get root shell"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 54, "seconds": 0}, "line": " Begin of recovering rop.c source code"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 56, "seconds": 41}, "line": " Recreating rop.c then compiling"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 59, "seconds": 44}, "line": " Copying the physical disk to our local box via SSH and DD"}, {"machine": "Frolic", "videoId": "b6WGQSJu_zQ", "timestamp": {"minutes": 61, "seconds": 44}, "line": " Using PhotoRec to restore files and finding rop.c"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 0, "seconds": 53}, "line": " Begin of Recon"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 3, "seconds": 30}, "line": " Checking out the Web Page"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 4, "seconds": 20}, "line": " Doing UDP/GoBuster Scans"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Running SNMPWalk and then logging into web interface"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 10, "seconds": 20}, "line": " Reading the tickets on the web page"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Discovering code execution"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 16, "seconds": 0}, "line": " Reverse Shell Returned"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 23, "seconds": 15}, "line": " Discovering FTP Server 10.120.15.10"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Gaining access to a Router Interface"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Using Draw.io to draw out the network"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 32, "seconds": 40}, "line": " Examining routing information"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 35, "seconds": 45}, "line": " Looking at BGP Information"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 39, "seconds": 0}, "line": " First attempt at BGP Hijack, advertising a route"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 43, "seconds": 30}, "line": " Did not work, examining routing loop."}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 50, "seconds": 50}, "line": " Blocking the routing advertisement to AS300"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 56, "seconds": 50}, "line": " Showing the new routing loop (AS300 sends to AS200)"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 60, "seconds": 0}, "line": " Telling AS200 not to advertise the route to AS300"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 64, "seconds": 0}, "line": " Grabbing FTP Traffic to get root password"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- Extra Content"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 67, "seconds": 0}, "line": " Logging into all 3 routers for some fun"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 68, "seconds": 50}, "line": " Hiding from TraceRoute by mucking with TTL's"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 73, "seconds": 20}, "line": " Redoing the attack, but showing routing tables on all routers"}, {"machine": "Carrier", "videoId": "2ZxRA8BgmnA", "timestamp": {"minutes": 77, "seconds": 30}, "line": " Unintended route, Just adding an IP to eth2"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 0, "seconds": 1}, "line": " This video didn't go quite as smooth as I expected.  Still putting it here to show an unintended route for Ethereal.  When I get more time, I'll probably redo this video, so don't be surprised if it disappears."}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 0, "seconds": 14}, "line": " Demo of this AppLocker Bypass"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 1, "seconds": 30}, "line": " How this is different than LOLBINs"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Creating a Reverse Shell EXE"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Converting our Reverse Shell EXE to a DLL"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Performing this COR PROFILER bypass with our Reverse Shell DLL"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 11, "seconds": 21}, "line": " Trying to do this on the HackTheBox machine: Ethereal"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 18, "seconds": 43}, "line": " Creating a BAT file to set environment variables and execute TZSYNC"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 20, "seconds": 45}, "line": " Executing the BAT File and getting a meterpreter session!"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 22, "seconds": 3}, "line": " Doing JuicyPotato to privesc to SYSTEM"}, {"machine": "Carrier", "videoId": "T91iXd_VPVI", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Migrating to a user to be able to read an EFS Protected file."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 0, "seconds": 50}, "line": " Begin of Recon, Downloading FTP and inspecting websites"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 10, "seconds": 23}, "line": " Recap of what we saw on the recon. Limited pages that provide paths for exploitation, Server Hostname, and FTP"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Sending MD5Hashes to VirusTotal to get file age"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 15, "seconds": 45}, "line": " Downloading PasswordBox sourcecode to examine pbox.dat and discover a password manager."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 21, "seconds": 0}, "line": " Use Hydra to try to bruteforce ethereal.htb:8080, find blind command injection in page by running various ping commands but no way to view output."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 25, "seconds": 45}, "line": " Using nslookup to exfil the results of commands executed."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 33, "seconds": 15}, "line": " Creating Python Script to automate exploitaiton of this program.  Using Scapy, BeutifulSoup, and Requests."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 55, "seconds": 23}, "line": " Script working! Now to make the output a bit more pretty using tokens to sepereate spaces"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 62, "seconds": 0}, "line": " Running commands to get interesting information about the page"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 65, "seconds": 20}, "line": " Enumerating the Firewall via netsh"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 69, "seconds": 10}, "line": " Using OpenSSL to get a reverse shell on windows"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 77, "seconds": 25}, "line": " Reverse shell returned. "}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 79, "seconds": 40}, "line": " Creating a malicious shortcut via powershell"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 82, "seconds": 40}, "line": " Using OpenSSL To transfer files"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 88, "seconds": 0}, "line": " Getting reverse shell as Alan, then using OpenSSL to convert files to base64 to make exfil easier"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 92, "seconds": 30}, "line": " Creating and signing a malicious MSI with WiX."}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 108, "seconds": 15}, "line": " First attempt failed, creating a less complicated MSI File by just having it execute our shortcut"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 113, "seconds": 0}, "line": " Getting reverse shell as SYSTEM - Cannot read EFS Files"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 115, "seconds": 20}, "line": " Having our MSI not run as SYSTEM by changing impersonation in WiX"}, {"machine": "Ethereal", "videoId": "Bhh5yPHjwUY", "timestamp": {"minutes": 118, "seconds": 30}, "line": " Shell as Rupal returned."}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 0, "seconds": 58}, "line": " Begin of recon: ftp, telnet, IIS 7.5"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Downloading all files off an FTP Server with WGET"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Examining the \"Access Control.zip\" file."}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Cracking a zip file with John"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 7, "seconds": 45}, "line": " Creating a wordlist for cracking the zip (strings of the mdb file)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Exploring the MDB Files (Access Database) with MDBTools (mdb-sql and mdb-tables)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 12, "seconds": 30}, "line": " Grabbing the same password we cracked by checking the auth_user table"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 13, "seconds": 35}, "line": " Converting the PST File (Outlook Email) to PlainText via readpst"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Logging into telnet with the credentials from the email"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 15, "seconds": 45}, "line": " Switching to a Nishang Shell to execute powershell"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 18, "seconds": 15}, "line": " Running JAWS (Just Another Windows Scanner)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 23, "seconds": 34}, "line": " Discovering Stored Credentials on the box for ACCESS\\Administrator "}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 25, "seconds": 11}, "line": " Examining the Shortcut on PUBLIC\\DESKTOP which shows us how the \"Stored Credential\" is used."}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 25, "seconds": 58}, "line": " Using powershell to view information of a Shortcut"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 27, "seconds": 25}, "line": " Using the Stored Credential via runas /savecred"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (some flailing around, darn windows quotes)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 30, "seconds": 31}, "line": " Creating Base64 (UTF-16LE) on linux to use in as a Powershell EncodedCommand"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 31, "seconds": 54}, "line": " Box done, Administrator returned."}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (Flailing around until 54:20)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 32, "seconds": 38}, "line": " Begin of decrypting the Stored Credential, uploading Mimikatz"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 33, "seconds": 40}, "line": " Using powershell to download files"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 36, "seconds": 36}, "line": " Discovering that I was trying to save mimikatz to a directory i cannot write to :("}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 37, "seconds": 15}, "line": " Testing Applocker methods to bypass the Software Restriction Policy (Give up on this one)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 38, "seconds": 50}, "line": " Trying to get Meterpreter shell via Unicorn (Fails, unknown reason)"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 41, "seconds": 28}, "line": " Getting a Empire Agent running"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 43, "seconds": 35}, "line": " Empire Agent Returned, Injecting meterpreter shellcode."}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 45, "seconds": 46}, "line": " Attempting to use Mimikatz from within Meterpreter to decrypt dpapi::creds"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 46, "seconds": 52}, "line": " Explaining Mimikatz Arguments when in \"non-interactive\" mode"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 54, "seconds": 20}, "line": " Grabbing needed files to decrypt DPAPI::CREDS offline"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 56, "seconds": 9}, "line": " Switing to Windows to run Mimikatz"}, {"machine": "Access", "videoId": "Rr6Oxrj2IjU", "timestamp": {"minutes": 62, "seconds": 32}, "line": " Decrypting the Creds stored in DPAPI"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Start of NMAP"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 4, "seconds": 10}, "line": " Signing into Zabbix as Guest"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Getting potential usernames from inside Zabbix and guessing creds"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Running Searchsploit and looking for vulnerabilties"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 7, "seconds": 20}, "line": " Analyzing the \"API\" Script from SearchSploit as we have API Creds"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Modifying the \"API\" Script "}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 11, "seconds": 15}, "line": " Showing a shortcut to skip the Container to Host Lateral Movement."}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 15, "seconds": 35}, "line": " Shell on the Container."}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 17, "seconds": 25}, "line": " Searching for Zabbix MySQL Password "}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 18, "seconds": 35}, "line": " Dumping the Zabbix User Database"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 20, "seconds": 0}, "line": " Logging into Zabbix as Admin, discover ZBX Agent on Host.  Testing if port is accessible"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 23, "seconds": 30}, "line": " Running commands on the Zabbix Agent (Host OS) from Zabbix Server (Guest OS)"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 29, "seconds": 53}, "line": " Getting a Reverse Shell on Zabbix (use nohup to fork)"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 32, "seconds": 40}, "line": " Running LinEnum on Zabbix Host"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 35, "seconds": 15}, "line": " Examining home directories to find Zapper Creds"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 36, "seconds": 42}, "line": " Examining the \"Zabbix-Service\" SetUID "}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 39, "seconds": 0}, "line": " PRIVESC #1: Running ltrace to discover it is vulnerable to $PATH Manipulation"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 42, "seconds": 0}, "line": " PRIVESC #2: Weak permissions on Purge-Backups Service"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 48, "seconds": 30}, "line": " Extra Content: Building a Zabbix API Client from Scratch!"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 48, "seconds": 55}, "line": " \"Pseudo Terminal\" Skeleton Script via Cmd module"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Adding Login Functionality"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 56, "seconds": 8}, "line": " Making the script login upon starting"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 57, "seconds": 50}, "line": " Adding functionality to dump users"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 64, "seconds": 0}, "line": " Adding functionality to dump groups"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 65, "seconds": 25}, "line": " Adding functionality to add users"}, {"machine": "Zipper", "videoId": "RLvFwiDK_F8", "timestamp": {"minutes": 70, "seconds": 45}, "line": " Adding functionality to modify users"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Begin of intro"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 2, "seconds": 17}, "line": " Examining port 80 and 443"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 3, "seconds": 15}, "line": " Using gobuster to discover directories"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 4, "seconds": 20}, "line": " /remote discovered, nothing to do here"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 5, "seconds": 25}, "line": " /mvc discovered"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 6, "seconds": 15}, "line": " SQL Injection everywhere"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 9, "seconds": 15}, "line": " Attempt to perform union injection on search"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Having trouble, send to SQLMap look at other places in the applicaiton"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 12, "seconds": 20}, "line": " SQLMap having trouble with search SQL, change to ITEM"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 16, "seconds": 50}, "line": " Attempting XP_CMDSHELL (Fails)"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 19, "seconds": 50}, "line": " Using XP_DIRTREE to read files off SMBShare"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 23, "seconds": 30}, "line": " Use Responder to steal the authentication attempt of XP_DIRTREE"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 25, "seconds": 0}, "line": " Cracking the NetNTLMv2 Hash"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Logging into /remote with cracked credentials"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 26, "seconds": 40}, "line": " Discovering unifi video is installed, this has a known privesc"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 29, "seconds": 30}, "line": " Attempting to use Meterpreter. (Fail: AV)"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 32, "seconds": 15}, "line": " Grabbing and compiling a DotNet Reverse Shell"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 35, "seconds": 15}, "line": " Actually compiling the reverse shell"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 38, "seconds": 58}, "line": " Using xcopy to copy our reverse shell to the victim"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 39, "seconds": 0}, "line": " Attempting to find Unifi Service name so we can restart it. End up searching registry due to permission issues."}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 42, "seconds": 10}, "line": " Restarting Unifi Service so it executes TaskKill.exe"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " # Box Done"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 44, "seconds": 25}, "line": " Start of Bypassing AppLocker Bypass by copying executable into a directory under Windows"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 45, "seconds": 50}, "line": " Escaping powershell constrained mode with PSBypassCLM"}, {"machine": "Giddy", "videoId": "J2unwbMQvUo", "timestamp": {"minutes": 60, "seconds": 25}, "line": " Showing the Powershell History file which contained a hint at Unifi"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Want the WireShark Sticker? http://weirdstuffis.online "}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Begin of Recon"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 2, "seconds": 25}, "line": " Enumerating OpenBSD Patch Date via SSH Version"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Examining port 80... Use Wireshark to see why NMAP gets a response but firefox does not"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Invalid Requests, will cause HTTP Service to send error message"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Using ldapsearch to enumerate ldap, use wireshark to see how the nmap script works"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 21, "seconds": 30}, "line": " Using SMBMap to PassTheHash and enumerate fileshares and download Putty Key"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 23, "seconds": 20}, "line": " Using PuttyGen to convert Putty Key to an RSA Key"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 24, "seconds": 55}, "line": " Testing out ssh_enumusers to see if that would have worked to get valid usernames"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 26, "seconds": 30}, "line": " Logged in as Alice, use LinEnum"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 28, "seconds": 40}, "line": " Examining doas configuration (like Sudo -l)"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 30, "seconds": 0}, "line": " Examining HTTPD Configuration to see why we couldn't hit the webserver earlier"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 32, "seconds": 30}, "line": " Examining SSHD Configuration to see SSH is configured to allow CA Signed Keys"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 34, "seconds": 40}, "line": " Getting hashes from SSH Keys to know what publics go to which privates"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Playing with the SSHAUTH webservice to enumerate what principals go to which users"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 41, "seconds": 45}, "line": " Signing a SSH Key using DoAs to sign a key with the root Principal"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 45, "seconds": 30}, "line": " Testing the key, explaining how this all works"}, {"machine": "Ypuffy", "videoId": "UoB-J-eDvrg", "timestamp": {"minutes": 47, "seconds": 30}, "line": " Unintended privesc, Xorg exploit"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 0, "seconds": 40}, "line": " Begin of the box"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 3, "seconds": 20}, "line": " Checking the HTTP Ports out"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 4, "seconds": 38}, "line": " Using wfuzz to bruteforce a login on port 80"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 8, "seconds": 15}, "line": " Begin examining port 8080, use wfuzz to bruteforce a cookie"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Using wfuzz to enumerate the WAF and determine bad characters"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 14, "seconds": 40}, "line": " Doing a SSRF Like attack with wfuzz and enumerating open ports on localhost."}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 16, "seconds": 50}, "line": " Begin examining port 11211 (MemCache)"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 18, "seconds": 0}, "line": " Dumping data from Memcache"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Using CVE-2018-15473 to enumerate valid users over SSH"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 27, "seconds": 35}, "line": " Cracking the users hash and logging into the box"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 29, "seconds": 0}, "line": " Using R2 to analyzing rabbit hole application \"try_harder\""}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 33, "seconds": 30}, "line": " Going through LinEnum"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 38, "seconds": 30}, "line": " Using r2 to examine myexec to find password"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 40, "seconds": 13}, "line": " Using r2 to examine libseclogin.so"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 41, "seconds": 30}, "line": " Examining ld.so.conf.d to identify if we can use ldconfig to hijack a library"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 42, "seconds": 10}, "line": " Creating a malicious library to hijack seclogin()"}, {"machine": "Dab", "videoId": "JvqBaZ0WnV4", "timestamp": {"minutes": 45, "seconds": 10}, "line": " Lets bypass the login by hijacking printf()"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 0, "seconds": 55}, "line": " Begin of Recon (Port Scans)"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 4, "seconds": 9}, "line": " Reverse Image Searching an favicon to get application used"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 8, "seconds": 20}, "line": " NODE-RED: Reverse Shell Returned"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 15, "seconds": 30}, "line": " NODE-RED: Running IP and Port Scans to identify lateral movement targets"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 24, "seconds": 29}, "line": " Downloading Chisel (Go Program for Tunnels)."}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 25, "seconds": 0}, "line": " Shrinking Go Programs by using ldflags and upx packing from 10Mb to 3Mb!"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 27, "seconds": 0}, "line": " PowerPoint: Explaining Reverse Pivot Tunnel using Chisel"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 31, "seconds": 25}, "line": " WWW: Tunnel online, examining the website"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 34, "seconds": 23}, "line": " Full Port Scan to 172.19.0.2, discover REDIS"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 36, "seconds": 30}, "line": " Searching for ways to execute code against REDIS"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 38, "seconds": 7}, "line": " Using REDIS to create a PHP Shell"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 41, "seconds": 6}, "line": " PowerPoint: Explaining Local Pivot Tunnel using Chisel"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 44, "seconds": 30}, "line": " WWW: Reverse Shell Returned"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 45, "seconds": 45}, "line": " Notice wildcard used with RSYNC, go search GTFOBins"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 51, "seconds": 32}, "line": " Abusing the wildcard within RSYNC"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 57, "seconds": 23}, "line": " WWW: Got Root, but no flag... Lets go look at RSYNC again."}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 60, "seconds": 15}, "line": " Explaining how to tunnel from Backup - WWW - NODE-RED - Kali"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 77, "seconds": 50}, "line": " Getting reverse shell on BACKUP via uploading CronJob through rsync"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 80, "seconds": 30}, "line": " BACKUP: Reverse Shell Returned... No root.txt here either!?"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 86, "seconds": 30}, "line": " BACKUP: Noticing this is has /dev/sda*, where other dockers do not"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 88, "seconds": 15}, "line": " BACKUP: Dropping a cronjob on root disk to get shell on the host"}, {"machine": "Reddish", "videoId": "Yp4oxoQIBAM", "timestamp": {"minutes": 90, "seconds": 45}, "line": " ExtraContent: PowerPoint Reverse SOCKS5 Proxy with Chisel"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 1, "seconds": 5}, "line": " Begin of recon"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 2, "seconds": 45}, "line": " Checking out the website"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Using wfuzz to enumerate usernames"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Logging in with an account we created"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 7, "seconds": 23}, "line": " Checking out Change Password and noticing it does this poorly"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 9, "seconds": 25}, "line": " Using the contact form, to see if tyler will follow links"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 14, "seconds": 14}, "line": " Changing Tyler's password by sending him to the ChangePassword Page"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Logged in and find SMB Share with credentials."}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 16, "seconds": 15}, "line": " Found a webshare but not sure the directory it executes from. Begin hunting for a different webserver."}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 17, "seconds": 48}, "line": " Port 8808 found via nmap'ing all ports.  Creating a php script to gain code execution"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 19, "seconds": 15}, "line": " Downloading netcat for windows to use as a Reverse Shell"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 21, "seconds": 14}, "line": " Playing with Bash on Windows"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 22, "seconds": 35}, "line": " Finding the administrator password in ~/.bash_history"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- Box done"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 23, "seconds": 45}, "line": " Alternate way to find the .bash_history file"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 25, "seconds": 36}, "line": " Unintended way to bypass the CSRF. SQL Injection + bad Static Code analysis"}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 0, "seconds": 1}, "line": " In the Holiday video, I do a bit more that may be helpful with card type attacks "}, {"machine": "SecNotes", "videoId": "PJXb2pK8K84", "timestamp": {"minutes": 0, "seconds": 1}, "line": " : https://www.youtube.com/watch?v=FvHyt7KrsPE&app=desktop"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 0, "seconds": 50}, "line": " Start of the box"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Attempting GoBuster but wildcard response gives issue"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 7, "seconds": 40}, "line": " Start of doing wfuzz to find content"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 10, "seconds": 38}, "line": " Manually testing SQLInjection"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 13, "seconds": 7}, "line": " Running SQLMap and telling it exactly where the injection is"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 16, "seconds": 4}, "line": " Manually extracting files with the SQL Injection"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 19, "seconds": 50}, "line": " Cracking the hash with hashcat"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 25, "seconds": 0}, "line": " Start of examining the custom webapp, playing with Template Injection"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Explaining a way to enumerate language behind a webapp"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 35, "seconds": 17}, "line": " Reverse Shell returned on first Docker Container"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 38, "seconds": 0}, "line": " Examining SQL Database"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 39, "seconds": 40}, "line": " Doing the Port Knock to open up SSH"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 43, "seconds": 50}, "line": " Gain a foothold on the host of the docker container via ssh"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Identifying containers running"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 50, "seconds": 10}, "line": " Creating SSH Port Forwards without exiting SSH Session then NMAP through"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 0, "seconds": 1}, "line": "  SSH"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 55, "seconds": 11}, "line": " Begin looking into Portainer, finding a weak API Endpoint"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 59, "seconds": 0}, "line": " Start of creating a container in portainer that can access the root file"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 0, "seconds": 1}, "line": "  system"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 68, "seconds": 25}, "line": " Changing sudoers so dorthy can privesc to root"}, {"machine": "Oz", "videoId": "yX00n1UmalE", "timestamp": {"minutes": 69, "seconds": 50}, "line": " Lets go back and create a python script to play with SQL Injection"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Begin of NMAP"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 2, "seconds": 30}, "line": " Extra nmaps, SNMP and AllPorts"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Playing with OneSixtyOne (SNMP BruteForce)"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Looking at SNMPWalk Output"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 8, "seconds": 40}, "line": " Installing SNMP Mibs so SMPWalk is readable"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 10, "seconds": 5}, "line": " Accessing the box over Link Local IPv6 Address"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 14, "seconds": 0}, "line": " Looking at Por 3366 (Website), getting PW from SNMP Info"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 17, "seconds": 50}, "line": " Getting IPv6 Routable Address via SNMP"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 19, "seconds": 20}, "line": " NMAP the IPv6 Address"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 21, "seconds": 0}, "line": " Accessing the page over IPv6"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Getting output from the command execution page"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 24, "seconds": 55}, "line": " Viewing Credentials Files and accessing the box via SSH"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 29, "seconds": 0}, "line": " Examining why loki cannot use /bin/su (getfacl)"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Getting a shell as www-data"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 0, "seconds": 1}, "line": " 38;10 - Finding the root.txt file from using find command to search for files by"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 0, "seconds": 1}, "line": "  date"}, {"machine": "Mischief", "videoId": "GKo6xoB1g4Q", "timestamp": {"minutes": 40, "seconds": 30}, "line": " Extra content, reading files via ICMP"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Begin of Recon"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Looking at what Filtered means in Nmap"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 5, "seconds": 0}, "line": " Start of looking at webpage (GoBuster)"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Manual HTTP Enumeration"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Start of exploiting with BurpSuite"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 17, "seconds": 0}, "line": " SSH Key Found, logging in with nobody"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 19, "seconds": 12}, "line": " Discovering a second SSH Server"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 23, "seconds": 36}, "line": " Using the same SSH Key to login to the second SSH Server as monitor"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 24, "seconds": 38}, "line": " Escaping rBash by modifying an executable file in our current $PATH"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 28, "seconds": 13}, "line": " Running LinEnum.sh to search for PrivEscs"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 30, "seconds": 50}, "line": " Enabling ThoroughTests in LinEnum to see what else it will check"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 36, "seconds": 30}, "line": " Looking into capabilities permission sin linux"}, {"machine": "Waldo", "videoId": "1klneIHECqY", "timestamp": {"minutes": 39, "seconds": 0}, "line": " Begin of second way to escape rBash and setup a SSH Tunnel for fun"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 1, "seconds": 10}, "line": " Begin of recon "}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Poking at DNS - Nothing really important."}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Examining what NMAP Scripts are ran. "}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 6, "seconds": 35}, "line": " Lets just try out smbclient to list shares available"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 7, "seconds": 25}, "line": " Using SMBMap to show the same thing, a great recon tool!"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 8, "seconds": 30}, "line": " Pillaging the Replication Share with SMBMap"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 9, "seconds": 20}, "line": " Discovering Groups.xml and then decrypting passwords from it"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 13, "seconds": 10}, "line": " Dumping Active Directory users from linux with Impacket GetADUsers"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 16, "seconds": 28}, "line": " Using SMBMap with our user credentials to look for more shares"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 18, "seconds": 25}, "line": " Switching to Windows to run BloodHound against the domain "}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Analyzing BloodHound Output to discover Kerberostable user"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 27, "seconds": 25}, "line": " Performing Kerberoast attack from linux with Impacket GetUsersSPNs"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 29, "seconds": 0}, "line": " Cracking tgs 23 with Hashcat"}, {"machine": "Active", "videoId": "jUc1J31DNdw", "timestamp": {"minutes": 30, "seconds": 0}, "line": " Getting root on the box via PSEXEC"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Begin nmap, discover FTP, Drupal, H2, and its Ubuntu Beaver"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Checking FTP Server for hidden files"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 4, "seconds": 30}, "line": " Examining encrypted file, discovering encrypted with OpenSSL and likely a block cipher"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Creating a bunch of files varying in length to narrow likely ciphers down."}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 14, "seconds": 35}, "line": " Encrypting all of the above files and checking their file sizes"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 22, "seconds": 45}, "line": " Decrypting file, obtaining a password"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 24, "seconds": 25}, "line": " Begin looking at Drupal, running Droopescan"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 25, "seconds": 12}, "line": " Manually examining Drupal, finding a way to enumerate usernames"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Placing invalid emails in create account, is a semi-silent way to enumerate usernames"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 28, "seconds": 15}, "line": " Logging into Drupal with Admin.  "}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 29, "seconds": 25}, "line": " Gaining code execution by enabling PHP Plugin, then previewing a page with php code"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 32, "seconds": 30}, "line": " Reverse Shell Returned"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 33, "seconds": 25}, "line": " Running LinEnum.sh - Discover H2 (Database) runs as root"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Hunting for passwords in Drupal Configuration"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 39, "seconds": 25}, "line": " Finding database connection settings.  SSHing with daniel and the database password (not needed)"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 40, "seconds": 10}, "line": " Doing Local (Daniel) and Reverse (www) SSH Tunnels.  To access services on Hawk\u2019s Loopback.  Only need to do one of those, just showing its possible without daniel"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 44, "seconds": 30}, "line": " Accessing Hawk\u2019s H2 Service (8082) via the loopback address"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Finding the H2 Database Code Execution through Alias Commands, then hunting for a way to login to H2 Console."}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 51, "seconds": 45}, "line": " Logging into H2 by using a non-existent database, then testing code execution"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 52, "seconds": 50}, "line": " Playing with an awesome Reverse Shell Generator (RSG), then accidentally breaking the service."}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 59, "seconds": 50}, "line": " Reverted box, cleaning up environment then getting reverse shell"}, {"machine": "Hawk", "videoId": "UGd9JE1ZXUI", "timestamp": {"minutes": 62, "seconds": 45}, "line": " Discovering could have logged into the database with Drupal Database Creds."}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Introduction, nmap"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Clicking around in Tomcat"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 2, "seconds": 20}, "line": " Playing around with HTTP Authentication"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Bruteforcing tomcat default creds with Hydra and seclists"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Sending hydra through a proxy to examine what is happening"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 12, "seconds": 50}, "line": " Logging into tomcat and using msfvenom + metasploit to upload a malicious war file"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 22, "seconds": 42}, "line": " Begin of doing this box without MSF"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 23, "seconds": 45}, "line": " Downloading a cmd jsp shell and making a malicious war file"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 26, "seconds": 25}, "line": " WebShell returned"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 28, "seconds": 0}, "line": " Begin of installing SilentTrinity"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 30, "seconds": 55}, "line": " SilentyTrinity Started, starting listener and generating a payload"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 33, "seconds": 0}, "line": " Pasting the payload into the webshell"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 34, "seconds": 0}, "line": " Debugging SSL Handshake errors"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Starting SilentTrinity back up, how to use modules"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 39, "seconds": 10}, "line": " Start of Execute-Assembly, compiling Watson"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 43, "seconds": 10}, "line": " Running Watson"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 43, "seconds": 30}, "line": " Start of Seatbelt and debugging why some dotNet code may not run (versioning issues)"}, {"machine": "Jerry", "videoId": "PJeBIey8gc4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " SilentTrinity Talk: https://www.youtube.com/watch?v=NaFiAx737qg"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 0, "seconds": 42}, "line": " Begin of Nmap"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 4, "seconds": 23}, "line": " Examining the anonymous FTP Directory and discovering email addresses in Meta Data"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Manually enumerating valid email addresses via SMTP"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 10, "seconds": 50}, "line": " Creating a \"Canary Document\" in Word to ping back to our server when a word document is opened"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 13, "seconds": 14}, "line": " Generating a malicious RTF Document (CVE-2017-0199)"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 26, "seconds": 28}, "line": " Shell Returned.  Enumerating the AppLocker Policy"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 32, "seconds": 53}, "line": " Decrypting a PowerShell Secure String to reveal Tom's Password, Testing access with SSH"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 35, "seconds": 22}, "line": " Lets forget we had Tom and run Bloodhound from Nico!"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 40, "seconds": 30}, "line": " First time opening BloodHound on this box."}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 49, "seconds": 45}, "line": " Lets update Bloodhound, looks like some data is missing and there were errors when running it"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 53, "seconds": 25}, "line": " Finding a path from Nico to BACKUP_ADMINS and explaining AD Security Objects (GenericWrite, WriteOwner,etc)"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 58, "seconds": 23}, "line": " Taking Ownership over Herman then allowing Nico to change his password and examining bloodhound"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 61, "seconds": 40}, "line": " Adding Herman to the Backup_Admins group"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 64, "seconds": 30}, "line": " Finding the Administrator Password within backup scripts."}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 67, "seconds": 0}, "line": " Attempting to run Watson (ends up not working)"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 83, "seconds": 22}, "line": " Using Metasploit to do the box"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 85, "seconds": 42}, "line": " Since Watson failed, lets just look at last patch times on the box to get an idea whats vulnerable."}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 87, "seconds": 19}, "line": " Attempting to do the ALPC Exploit within Metasploit"}, {"machine": "Reel", "videoId": "ob9SgtFm6_g", "timestamp": {"minutes": 91, "seconds": 0}, "line": " That failed - Lets just prove the box is vulnerable, by overwriting a DLL"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Start of Recon"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 2, "seconds": 15}, "line": " TFTP Enumeration - Identifying configuration and OS information"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 6, "seconds": 32}, "line": " Finding a path to code execution"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 7, "seconds": 17}, "line": " Examining PSExec Metasploit Module"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 8, "seconds": 55}, "line": " Using irb within metasploit to print a powershell payload"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 12, "seconds": 30}, "line": " Examining PsExec()"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 15, "seconds": 40}, "line": " Examining native_upload"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 18, "seconds": 10}, "line": " Examining mof_upload"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 20, "seconds": 34}, "line": " Using irb within metasploit to print the MOF File"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 22, "seconds": 35}, "line": " Quick explanation of MOF Files"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 25, "seconds": 5}, "line": " Modifying the MOF to run NetCat"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Uploading nc to the target"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 28, "seconds": 50}, "line": " Uploading the malicious MOF File and getting a shell!"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 29, "seconds": 50}, "line": " Using Streams to view Hidden text within ADS"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ==== Box Done, Lets play with MSF"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 33, "seconds": 8}, "line": " Start of Bonus Content, finging a TFTP Exploit that uses MOF"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 35, "seconds": 5}, "line": " Attempting to use distrinct_ftp_traversal against DropZone"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 36, "seconds": 30}, "line": " Installing pry.byebug in order to allow us to drop to a debug console and step through metasploit modules"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 40, "seconds": 50}, "line": " Testing out pry.byebug"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 42, "seconds": 30}, "line": " Finding why the exploit module didn't work"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 44, "seconds": 50}, "line": " Module still doesn't work, TFTP Stopping mid transfer"}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 49, "seconds": 30}, "line": " Whoops, changed the delay on the wrong timeout "}, {"machine": "DropZone", "videoId": "QzP5nUEhZeg", "timestamp": {"minutes": 51, "seconds": 0}, "line": " Meterpreter Shell returned, showing off the extended API and some WMI Commands."}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 0, "seconds": 38}, "line": " Begin of recon"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 1, "seconds": 48}, "line": " Gobuster, using -x aspx to find aspx pages"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 3, "seconds": 16}, "line": " Playing with a file upload form, seeing what can be uploaded"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 5, "seconds": 15}, "line": " Using Burp Intruder to automate checking file extensions"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Finding a way to execute code from file upload in ASPX (web.config)"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 10, "seconds": 55}, "line": " Executing code via web.config file upload"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 13, "seconds": 8}, "line": " Installing Merlin to be our C2"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 15, "seconds": 25}, "line": " Compiling the Merlin Windows Agent"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 18, "seconds": 37}, "line": " Modifying web.config to upload and execute merlin"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 21, "seconds": 14}, "line": " Merlin Shell returned!"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 24, "seconds": 18}, "line": " Checking for SEImpersonatePrivilege Token then doing Juicy Potato"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 27, "seconds": 44}, "line": " Getting Admin via Juicy Potato"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 29, "seconds": 44}, "line": " Box completed"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 30, "seconds": 0}, "line": " Start of doing this box again, with Metasploit! Creating a payload with Unicorn"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 33, "seconds": 0}, "line": " Having troubles getting the server call back to us, trying Ping to see if the exploit is still working"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 34, "seconds": 17}, "line": " Reverted box.  Have to update our payload with some updated VIEWSTATE parameters"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 36, "seconds": 45}, "line": " Metasploit Session Returned!  Checking local_exploit_suggester"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 40, "seconds": 1}, "line": " Comparing local_exploit_suggester on x32 and x64 meterpreter sessions"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 40, "seconds": 30}, "line": " Getting Admin via MS10-092"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 42, "seconds": 5}, "line": " Attempting to pivot through the Firewall using Meterpreter and doing Eternal Blue! (Fails, think I screwed up listening host #PivotProblems)"}, {"machine": "Bounty", "videoId": "7ur4om1K98Y", "timestamp": {"minutes": 47, "seconds": 20}, "line": " Creating a Python Script to find valid extensions that handles CSRF Checks if they had existed"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 1, "seconds": 10}, "line": " Begin of recon"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Discovery of Wordpress and fixing broken links with burp"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Start of WPScan"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 7, "seconds": 14}, "line": " Start of poking at Monstra, (Rabbit Hole)"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 13, "seconds": 5}, "line": " Back to looking at WPScan, Find Gwolle Plugin is vulnerable to RFI Exploits"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 16, "seconds": 30}, "line": " Reverse shell returned as www-data"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 18, "seconds": 8}, "line": " Confirming monstra was read-only"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 18, "seconds": 50}, "line": " Running LinEnum.sh to see www-data can run tar via sudo"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Use GTFOBins to find a way to execute code with Tar"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 22, "seconds": 0}, "line": " Begin of Onuma user, use LinEnum again to see SystemD Timer of a custom script"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 24, "seconds": 10}, "line": " Examining backuperer script"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Hunting for vulnerabilities in Backuperer"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 32, "seconds": 15}, "line": " Playing with If/Then exit codes in Bash.  Tuns out exit(0/1) evaluate as True, 2 is false"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 34, "seconds": 20}, "line": " Begin of exploiting the backuperer service by exploiting intregrity check"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 36, "seconds": 40}, "line": " Creating our 32-bit setuid binary"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 39, "seconds": 16}, "line": " Replacing backup tar, with our malicious one.  (File Owner of Shell is wrong)"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 40, "seconds": 54}, "line": " Explaning file owners are embedded within Tar, creating tar on our local box so we can have the SetUID File owned by root"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 42, "seconds": 30}, "line": " Exploiting the Backuperer Service via SetUID!"}, {"machine": "Tartarsauce", "videoId": "9MeBiP637ZA", "timestamp": {"minutes": 45, "seconds": 0}, "line": " Unintended Exploit: Using SymLinks to read files via backuperer service"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 0, "seconds": 54}, "line": " Start of Recon"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 3, "seconds": 10}, "line": " Start of GoBuster"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Looking at /upload, testing with a normal XML File"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 6, "seconds": 15}, "line": " Valid XML File created, begin of looking for XML Entity Injection XXE"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 8, "seconds": 20}, "line": " XXE Returns a a local file off the server"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 9, "seconds": 30}, "line": " Grabbing the source code to the webserver to find newpost function."}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 11, "seconds": 35}, "line": " Discovery of vulnerability due to user data being passed to pickle"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 12, "seconds": 44}, "line": " Creating the script to exploit pickle"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 16, "seconds": 38}, "line": " Reverse shell returns!"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 19, "seconds": 55}, "line": " Poking around at Source Code"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 20, "seconds": 15}, "line": " Discover of an SSH Key within deployment stuff."}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 21, "seconds": 15}, "line": " Trying SSH Key for other users on the box to see if it is valid"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 22, "seconds": 57}, "line": " Hunting for git filers, the boxes name is \"Gitter\" and we have an SSH Key that goes nowhere.  "}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Discovery ~roosa/work is the same as ~roosa/deploy but there's a .git repo in this one!"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 23, "seconds": 45}, "line": " Examining Git Log to see the SSH Key has changed!"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 25, "seconds": 20}, "line": " SSH'ing with the old key, to see it's root's key."}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 25, "seconds": 58}, "line": " The webserver could read Roosa's SSH Key.  Could bypass the entire pickle portion"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 26, "seconds": 20}, "line": " Start of \"Extra Practice\""}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 27, "seconds": 40}, "line": " Creating a Python Script to automate the LFI With XXE"}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " == Note this piece leads to failure.  However, if we could convert the output to a more friendly format such as Base64 it would of worked.  This is likely in PHP WebServers due to \"PHP Wrappers\", perhaps it is with python too but I don't know a way =="}, {"machine": "DevOops", "videoId": "tQ34Ntkr7H4", "timestamp": {"minutes": 35, "seconds": 50}, "line": " Script completed, lets improve it to try to download an exposed git repo"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 0, "seconds": 55}, "line": " Begin of Recon Nmap, Identify OS Version, Check out Page to find hostname is streetfighterclub.htb."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 2, "seconds": 53}, "line": " Using GoBuster and WFUZZ to identify: members.streetfighterclub.htb and members.streetfighterclub.htb/old/login.asp"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 8, "seconds": 45}, "line": " Begin poking around the members.streetfighterclub.htb page - Find SQL Injection"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Boolean injection to force the query to return \"valid login\".  Play with logins to find it always returns to \"Service not available\""}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 14, "seconds": 25}, "line": " Testing Union Injections for easy exfil of data"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 15, "seconds": 50}, "line": " Examining Stacked Queries to make running our own SQL Statements easy.  Then bunch of injections to run Xp_CMDShell and get output."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 19, "seconds": 30}, "line": " Some valuable recon/information in debugging our SQL queries. Noticing small things really helps."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 34, "seconds": 40}, "line": " Start of making a program to give us a command shell."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 69, "seconds": 40}, "line": " Explaining the program we just created.  Then fix a small bug."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 72, "seconds": 45}, "line": " Begin of popping the box the intended way.  Finding powershell is blocked but specifying the 32-bit version is not"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 77, "seconds": 10}, "line": " Return of 32-bit PowerShell... Identifying we can append data to c:\\users\\decoder\\clean.bat -- That's odd lets try to place a shell in it to see if it is being ran."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 92, "seconds": 40}, "line": " Found the issue! Powershell is encoding in UTF-16 which is confusing cmd prompt.  64-bit Shell as Decoder returned!"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 95, "seconds": 30}, "line": " Exploiting Capcom Driver to gain root shell, this post is super helpful: http://www.fuzzysecurity.com/tutorials/28.html"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 102, "seconds": 18}, "line": " Escalating to System via Capcom Exploit, then copying root.exe and checkdll.dll to our box so we can reverse it."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 107, "seconds": 25}, "line": " Looking at the binaries in Ida64 Free"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 111, "seconds": 14}, "line": " Explaining what's happening and then writing a script to bypass the password check."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 115, "seconds": 35}, "line": " Start of unintended way (Juicy Potato)"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 118, "seconds": 10}, "line": " Finding a world write-able spot under System32 for AppLocker Bypass, thanks @Bufferov3rride -- Then uploading JuicyPotato"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 126, "seconds": 10}, "line": " Start of modifying JuicyPotato to accept uppercase arguments."}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 130, "seconds": 14}, "line": " Finding a vulnerable CLSID to get JuicyPotato working"}, {"machine": "Fighter", "videoId": "CW4mI5BkP9E", "timestamp": {"minutes": 148, "seconds": 25}, "line": " Running JuicyPotato with a vulnerable CLSID to gain a SYSTEM Shell, then create our own DLL to bypass the check."}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 0, "seconds": 48}, "line": " Begin of NMAP Discovery of Finger"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 3, "seconds": 36}, "line": " Enumerating Finger with Finger-User-Enum"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 5, "seconds": 0}, "line": " Nmap'ing all port quickly by lowering max-retries"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 8, "seconds": 40}, "line": " Adding an old Key Exchange Alogorithm to SSH"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 9, "seconds": 30}, "line": " Showing Hydra doesn't work, then using Patator"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (Patator also can do Finger Enum!  Try it out)"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 11, "seconds": 19}, "line": " Using find to count lines in all wordlist files"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 14, "seconds": 7}, "line": " Logged in with sunny:sunday"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Grabbing /backup/shadow.backup and cracking sha256crypt with Hashcat"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 16, "seconds": 46}, "line": " Just noticed this box is oooooold, try to privesc with sudo and ShellShock (Fail)"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 18, "seconds": 53}, "line": " Privesc by overwriting the /root/troll binary"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 0, "seconds": 1}, "line": " == Box Done"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 23, "seconds": 30}, "line": " Using wget to exfil files quickly"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 24, "seconds": 50}, "line": " Viewing what wget --post-file looks like"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Creating a PHP Script to accept uploaded files"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Hardening our upload location to prevent executing PHP Files and/or reading what was uploaded"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 29, "seconds": 10}, "line": " Starting a php webserver with php -S (ip):(port) -t ."}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 31, "seconds": 10}, "line": " Replacing the root password by changing the shadow file"}, {"machine": "Sunday", "videoId": "xUrq29OTSuM", "timestamp": {"minutes": 33, "seconds": 30}, "line": " Demoing a way to create directories and upload files!"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Begin of Recon, nmap filtered explanation"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 3, "seconds": 30}, "line": " Begin of initial DNSRecon, hunting for a domain name"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 6, "seconds": 4}, "line": " Web page enumeration, finding xdebug in header"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 9, "seconds": 47}, "line": " Installing xdebug plugin in Chrome to show its use"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 12, "seconds": 50}, "line": " Getting a reverse shell on the first docker (Icarus)"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Setting up nginx to accept files uploaded over HTTP / WebDav"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Examining the Wireless Capture from Icarus"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 21, "seconds": 30}, "line": " Cracking WPA with aircrack / hashcat"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 25, "seconds": 0}, "line": " Decrypting WPA traffic in Wireshark"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 27, "seconds": 50}, "line": " Enumerating valid usernames via SSH (CVE-2018-15473)"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 33, "seconds": 15}, "line": " SSH into port 2222 with information from Wireless Capture"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 34, "seconds": 40}, "line": " Domain Name found!  Time to do a DNS Zone Transfer"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 36, "seconds": 15}, "line": " Port Knocking to open up port 22"}, {"machine": "Olympus", "videoId": "7ifJOon5-G8", "timestamp": {"minutes": 40, "seconds": 5}, "line": " PrivEsc to root via being a member of the Docker Group"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 0, "seconds": 43}, "line": " Start of Recon, nmap and poking around the website"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Dirbusting a site that always respond 200"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 9, "seconds": 43}, "line": " Switching to a different Wordlist (SecLists/Discovery/Web/Common)"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 10, "seconds": 48}, "line": " Discovery of .git - Poking around to clone it and download"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 15, "seconds": 10}, "line": " Downloaded .git, examining commit history"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 19, "seconds": 50}, "line": " Start of Pickle Talk"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 21, "seconds": 25}, "line": " Begin writing of the pickle exploit"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 28, "seconds": 45}, "line": " Return of Reverse Shell as www-data"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 32, "seconds": 30}, "line": " Begin looking into CouchDB"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 34, "seconds": 0}, "line": " Poking around at documents within CouchDB"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 36, "seconds": 15}, "line": " Examining first exploit with creating a CouchDB User"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 39, "seconds": 50}, "line": " Exploring the passwords database with our newly created admin user and finding Homers Password."}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 42, "seconds": 0}, "line": " Getting root with sudo pip install"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 45, "seconds": 55}, "line": " Box Done.  Begin second unintended way to get to Homer User"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 47, "seconds": 3}, "line": " Playing with the public RCE Exploit for CouchDB "}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 48, "seconds": 20}, "line": " Running the exploit"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 49, "seconds": 36}, "line": " Examining the exploit, doing each step manually to see where it fails"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 54, "seconds": 30}, "line": " Searching on how to create a new CouchDB Cluster, maybe it will allow this work?"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 55, "seconds": 55}, "line": " Digging into how erlang works"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 57, "seconds": 30}, "line": " Finding default CouchDB Cookie"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 59, "seconds": 10}, "line": " Connecting to the Erlang pool then searching for how to run commands."}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 61, "seconds": 54}, "line": " Exploring how to send long commands as distributed task"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 64, "seconds": 30}, "line": " Getting reverse shell"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Extra Links"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://malicious.link/post/2018/erlang-arce/"}, {"machine": "Canape", "videoId": "rs75y2qPonc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Blackhat 2011 - Sour Pickles - https://www.youtube.com/watch?v=HsZWFMKsM08"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 0, "seconds": 56}, "line": " Start of recon, use Bootstrap XSL Script to make nmap pretty"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 3, "seconds": 10}, "line": " Looking at nmap in web browser "}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 3, "seconds": 52}, "line": " Navigating to the web page, and testing all the pages."}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 6, "seconds": 25}, "line": " Testing for LFI"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Using PHP  Filters to view the contents of php file through LFI (Local File Inclusion)"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 8, "seconds": 40}, "line": " Testing for RFI (Remote File Inclusion) [not vuln]"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Code Execution via LFI + phpinfo()"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Modifying the PHP-LFI Script code to get it working"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 17, "seconds": 10}, "line": " Debugging the script to see why tmp_name couldn't be found"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 20, "seconds": 12}, "line": " Shell returned!"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 21, "seconds": 25}, "line": " Looking at pwdbackup.txt and decoding 13 times to get password."}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 23, "seconds": 37}, "line": " SSH into the box (Do not privesc right away!)"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 24, "seconds": 29}, "line": " Getting shell via Log Poisoning"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 26, "seconds": 39}, "line": " Whoops.  Broke the exploit, because of bad PHP Code... We'll come back to this! (42:50)"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 28, "seconds": 47}, "line": " Begin of PrivEsc, grabbing secret.zip off"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 32, "seconds": 38}, "line": " Searching for processes running as root, find VNC"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 33, "seconds": 49}, "line": " Setting up SSH Tunnels without exiting SSH Session."}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 37, "seconds": 43}, "line": " Something weird happend... Setting up SSH Tunnels manually."}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 40, "seconds": 10}, "line": " PrivEsc: VNC through the SSH Tunnel, passing the encrypted VNC Password"}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 41, "seconds": 40}, "line": " Decrypting the VNC Password because we can."}, {"machine": "Poison", "videoId": "rs4zEwONzzk", "timestamp": {"minutes": 42, "seconds": 50}, "line": " Examining the log file to see why our Log Poison Failed, then doing the Log Poison"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 1, "seconds": 11}, "line": " Begin of recon"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 3, "seconds": 48}, "line": " Manually checking the page out"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 4, "seconds": 30}, "line": " Discovering the webserver is java/tomcact"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 5, "seconds": 35}, "line": " Starting up GoBuster / Hydra"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 9, "seconds": 40}, "line": " The Directory /Monitoring was found - Discovering its Struts because of .action"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 11, "seconds": 0}, "line": " Stumbling upon an exploit trying to find out how to enumerate Struts Versions"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 14, "seconds": 10}, "line": " Searching Github for CVE-2017-5638 exploit script, exploiting the box to find out its firewalled off"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 21, "seconds": 10}, "line": " Using a HTTP Forward Shell to get around the strict firewall"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " # Sokar Video Explaining it: https://www.youtube.com/watch?v=k6ri-LFWEj4"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " # Inception - Another box where i modify the FWD Shell POC: https://www.youtube.com/watch?v=J2I-5xPgyXk&t=3s"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 22, "seconds": 40}, "line": " Go here if you want to start copying the Forward Shell Script"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 23, "seconds": 34}, "line": " Explaining how it works"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 25, "seconds": 10}, "line": " Explaining the code"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 31, "seconds": 6}, "line": " Forward Shell Returned - Enumerating Database to find creds"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 37, "seconds": 29}, "line": " Examining User.py"}, {"machine": "Stratosphere", "videoId": "uMwcJQcUnmY", "timestamp": {"minutes": 40, "seconds": 15}, "line": " Privesc: Abusing Python's Path to load a malicious library and sudo user.py"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 0, "seconds": 58}, "line": " Begin of Recon"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 3, "seconds": 0}, "line": " Looking at the web application and finding the Serialized Cookie"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 4, "seconds": 38}, "line": " Googling for Node JS Deserialization Exploits"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Start of building our payload"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 7, "seconds": 10}, "line": " Examining Node-Serialize to see what the heck _$$ND_FUNC$$_ is"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 9, "seconds": 10}, "line": " Moving our serialized object to \"Name\", hoping to get to read stdout"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Really busing the deserialize function by removing the Immediately Invokked Expression (IIFE)"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 13, "seconds": 25}, "line": " Failing to convert an object (stdout) to string."}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 14, "seconds": 2}, "line": " Verifying code execution via ping"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 15, "seconds": 32}, "line": " Code execution verified, gaining a shell"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (Get a shell via NodeJSShell at end of video)"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 18, "seconds": 49}, "line": " Reverse shell returned, running LinEnum.sh"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 21, "seconds": 26}, "line": " Examining logs to find the Cron Job running as root"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 22, "seconds": 9}, "line": " Privesc by placing a python root shell in script.py"}, {"machine": "Celestial", "videoId": "aS6z4NgRysU", "timestamp": {"minutes": 24, "seconds": 15}, "line": " Going back and getting a shell with NodeJSShell"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 1, "seconds": 40}, "line": " Begin of Recon (nmap, setting hostname, dns, nmap, ipv6)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Checking websites (80,443,8080)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 8, "seconds": 10}, "line": " Attempting to enumerate users of OWA-2010 (Fails)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 14, "seconds": 10}, "line": " Checking out Joomla Version (/administrator/manifets/files/joomla.xml)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 15, "seconds": 50}, "line": " Using SearchSploit with (Complain Management System)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 19, "seconds": 38}, "line": " Register Account, Login, Verify/Play with SQL Union Injection"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 23, "seconds": 30}, "line": " Enumerating SQL Injection with SQLMap"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 29, "seconds": 18}, "line": " Going back to MSF/OWA_LOGIN and testing credentials."}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 32, "seconds": 15}, "line": " Logging into OWA and reading email to find out OpenOFfice, Defender, and Powershell Constain Mode is installed"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 36, "seconds": 20}, "line": " Creating a malicious OpenOffice macro with LibreOffice + Downloading an Executing a file without Powershell (certutil ftw)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 40, "seconds": 18}, "line": " Compiling Merlin (like MSF/Empire)"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 48, "seconds": 40}, "line": " Sending the email and waiting."}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 50, "seconds": 20}, "line": " Merlin call back, Switch to Powershell Nishang to get a interactive shell"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 54, "seconds": 30}, "line": " Running PowerUp to find we are an Administrator"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 56, "seconds": 56}, "line": " Running JAWS to do some more Windows Enumeration"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 63, "seconds": 4}, "line": " Found an odd scheduled task \"System Maintenance\""}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 66, "seconds": 3}, "line": " Attempting to write a php shell to HTTPD"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 0, "seconds": 1}, "line": " * Begin of weird issue with File Encoding breaking something *"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 72, "seconds": 30}, "line": " Frusterated creating a PHP Script... Switch to the SCHTask Privesc"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 78, "seconds": 20}, "line": " Uhh. Testing if echo is somehow breaking .bat/.php files"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 0, "seconds": 1}, "line": " * Wth. That was actually the issue!?"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 81, "seconds": 50}, "line": " Going back to test PHP to verify it just didn't like echo."}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Videos mentioned:"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Charon - Exploring Union Injection: https://www.youtube.com/watch?v=_csbKuOlmdE"}, {"machine": "Rabbit", "videoId": "5nnJq_IWJog", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Enterprise - Exploring Double Union Injection - https://www.youtube.com/watch?v=NWVJ2b0D1r8"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Begin of recon"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 3, "seconds": 15}, "line": " Begin of installing SQLPlus and ODAT (Oracle Database Attack Tool)"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 8, "seconds": 45}, "line": " Bruteforcing the SID with ODAT"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Holy crap, this is slow lets also do it with Metasploit"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 13, "seconds": 0}, "line": " Bruteforcing valid logins with ODAT"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 16, "seconds": 0}, "line": " Credentials returned, logging into Oracle with SQLPlus as SysDBA"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 19, "seconds": 0}, "line": " Reading files from disk via Oracle"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 23, "seconds": 20}, "line": " Writing files to disk from Oracle.  Testing it in WebRoot Directory"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 25, "seconds": 52}, "line": " File Written, lets write an ASPX WebShell to the Server"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 29, "seconds": 10}, "line": " WebShell Working!  Lets get a Reverse Shell"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 31, "seconds": 28}, "line": " Reverse Shell Returned"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 32, "seconds": 24}, "line": " Finding a DropBox link, but password doesn't display well."}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 33, "seconds": 55}, "line": " Attempting to copy file via SMB to view UTF8 Text"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 35, "seconds": 18}, "line": " That didn't work, lets transfer the file by encoding it in Base64."}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 36, "seconds": 55}, "line": " Got the password lets download the dump!"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 39, "seconds": 10}, "line": " Begin of Volatility"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 45, "seconds": 20}, "line": " Running the HashDump plugin from volatilty then PassTheHash with Administrator's NTLM!"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### Box Done"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 47, "seconds": 35}, "line": " Begin of unintended way, examining odat and uploading an meterpreter exe"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 50, "seconds": 30}, "line": " Using odat externaltable to execute meterpreter and get a system shell!"}, {"machine": "Silo", "videoId": "2c7SzNo9uoA", "timestamp": {"minutes": 52, "seconds": 20}, "line": " Examining odat verbosity flag to see what commands it runs and try to learn."}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 0, "seconds": 25}, "line": " Start of Recon, identifying end of life OS from nmap"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 3, "seconds": 20}, "line": " Running vulnerability scripts in nmap to discover heartbleed"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " (In video on Blue, I go a bit more in NMAP Scripts. https://www.youtube.com/watch?v=YRsfX6DW10E)"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 4, "seconds": 16}, "line": " Going to the HTTP Page to see what it looks like"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Begin of Heartbleed - Grabbing Python Module"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 7, "seconds": 13}, "line": " Explaining Heartbleed -- XKCD ftw"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Explaining and running the exploit"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Exporting large chunks of memory by running in a loop"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 14, "seconds": 10}, "line": " Finding an encrypted SSH Key on the server"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 15, "seconds": 35}, "line": " Examining heartbleed output to discover SSH Key Password"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 17, "seconds": 45}, "line": " SSH as low priv user returned"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 21, "seconds": 55}, "line": " Finding a writable tmux socket to hijack session and find a root shell"}, {"machine": "Valentine", "videoId": "XYXNvemgJUo", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Alternative Privesc, DirtyC0w"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 1, "seconds": 26}, "line": " Start of Recon"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 3, "seconds": 25}, "line": " Notice SSH configured for Pub Key Only.  Hint at what to grab later!"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Grabbing test.txt off ftp server via anonymous auth"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 4, "seconds": 7}, "line": " Determining if I want to go down the \"Exploit VSFTPD\" rabbit hole"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 5, "seconds": 54}, "line": " Viewing test.txt and hosts.php"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 6, "seconds": 48}, "line": " Figuring out how hosts.php works and discovering XXE"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 8, "seconds": 58}, "line": " Start of XXE Discovery"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 10, "seconds": 16}, "line": " Making the XXE Output /etc/passwd"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 11, "seconds": 33}, "line": " Encoding output in Base64 in order to view PHP Files"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 12, "seconds": 58}, "line": " Using Burp Intruder to BruteForce Files"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 16, "seconds": 20}, "line": " Creating a program to bruteforce home directories"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 26, "seconds": 41}, "line": " Program Finished.  Finding SSH ID_RSA Key"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 28, "seconds": 15}, "line": " Low Priv Access Granted"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 30, "seconds": 24}, "line": " LinEnum.sh shows Wordpress CHMOD'd to 777"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 31, "seconds": 5}, "line": " Examining Wordpress Site (big hint left by author)"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 32, "seconds": 10}, "line": " Enumerating MySQL Database"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 35, "seconds": 15}, "line": " Giving up on MySQL, lets edit PHP Files to dump passwords!"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 36, "seconds": 50}, "line": " Identifying the file we want to backdoor"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 37, "seconds": 51}, "line": " Placing our PHP Code"}, {"machine": "Aragog", "videoId": "NFdi-2tgvxY", "timestamp": {"minutes": 42, "seconds": 6}, "line": " Got the password!"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Original Video with In-Depth Explanations of Intended Solution: https://youtu.be/frh-jYaUvrU"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 1, "seconds": 10}, "line": " End of intro, Start of nmap"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 2, "seconds": 47}, "line": " Playing with Second-Order Union Injection"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 5, "seconds": 44}, "line": " Dumping all users"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 7, "seconds": 15}, "line": " Converting SFTP Exploit from 64bit to 32bit"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 13, "seconds": 27}, "line": " Reversing SLS Binary"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 15, "seconds": 19}, "line": " Kernel Exploit"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 22, "seconds": 31}, "line": " First Method - Executing ELF Binaries from memory (Reflective loading elf)"}, {"machine": "Nightmarev2", "videoId": "TVhtjiSedjU", "timestamp": {"minutes": 35, "seconds": 57}, "line": " Second Method - Crashing a program to create a write-able file."}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 1, "seconds": 54}, "line": " Begin Recon, Windows IIS/OS Mapping and GoBuster"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 5, "seconds": 20}, "line": " Explanation of Virtual Host Routing"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Developers name exposed in HTML Source, also discover /monitor"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 11, "seconds": 10}, "line": " Enumerating Username in PHP Server Monitor: Challenge Watch Sense to und"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " erstand CSRF and write an automated bruteforcer"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 16, "seconds": 33}, "line": " Discover of Internal-01.bart.htb"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 19, "seconds": 17}, "line": " Harveys Password with Hydra (Note: This is bypassable if you DIRBUST to find /Log/log.php)"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 29, "seconds": 34}, "line": " Finally got Hydra to return the password!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 32, "seconds": 20}, "line": " Log Poisoning + LFI = Remote Code Execution"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 37, "seconds": 30}, "line": " Return of Reverse Shell"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 41, "seconds": 30}, "line": " Why you should check if you're a 32-bit process on a 64-bit machine"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### Start of Failing attempting to do a RunAs... Lol."}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 48, "seconds": 35}, "line": " Attempting to use b33f/FuzzySecurity Invoke-RunAs"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 56, "seconds": 0}, "line": " Mistake with Invoke-RunAs is probably pointing it to the wrong port. D:"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 63, "seconds": 40}, "line": " ARGH!  Lets try to use this account via Empire"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 71, "seconds": 0}, "line": " Bring out the big guns, it's Metasploit Time!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 78, "seconds": 10}, "line": " Alright, lets poke a hole in the firewall and connect over SMB!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 81, "seconds": 17}, "line": " Failed to PSExec in MSF"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### End of Failing!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 81, "seconds": 40}, "line": " Found Impacket-PSExec!  And it works!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### Box Done"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 83, "seconds": 45}, "line": " Lets go hunt for creds!"}, {"machine": "Bart", "videoId": "Cz6vQvGGiuc", "timestamp": {"minutes": 95, "seconds": 23}, "line": " Cracking Salted Hashes with Hashcat (Sha265.Salt)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Edit: Whoops forgot @stefano_118 helped create this machine! "}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 1, "seconds": 50}, "line": " Start of Recon"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 4, "seconds": 58}, "line": " /documents and /secret rabbit hole enumeration"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 8, "seconds": 13}, "line": " Using wfuzz on the /secret rabbit hole to find argument for download.php"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Begin of Web Application Enumeration, some XSS Found"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 18, "seconds": 23}, "line": " Throwing bad characters in username and finding Second-Order SQL Injection."}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Begin of Union Injection to dump the database via second order sql injection"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 39, "seconds": 36}, "line": " Dumping users and passwords from SysAdmin table and using Hydra to bruteforce SSH"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 43, "seconds": 54}, "line": " Enumerating SFTP (Using SSHFS to Dump a File Listing)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 53, "seconds": 0}, "line": " Converting 64-Bit SFTP Exploit to 32-Bit"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 71, "seconds": 46}, "line": " Reverse Shell Returned, some stuff and finding Set-GID Binary"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 82, "seconds": 55}, "line": " Reversing SLS binary with Radare2 (r2)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 107, "seconds": 53}, "line": " Exploiting SLS Binary with new line character (Get to Decoder User)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 111, "seconds": 47}, "line": " Begin of Kernel Exploitation (CVE-2017-1000112)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 116, "seconds": 0}, "line": " Kernel Exploit Compiled (silly mistake before)"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 119, "seconds": 52}, "line": " Creating a new lsb-release file so exploit can identify kernel"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 127, "seconds": 3}, "line": " Recap of Box"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 129, "seconds": 56}, "line": " Creating a Tamper Script to do Second-Order SQL Injection"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ###"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " #Referenced Videos:"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ## Holiday Hack Analytics - https://www.youtube.com/watch?v=zcJyhDC9kgo/watch?v=zcJyhDC9kgo"}, {"machine": "Nightmare", "videoId": "frh-jYaUvrU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ## Charon (Union Injection) - https://www.youtube.com/watch?v=_csbKuOlmdE"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Testing out a new microphone, enjoy the random video."}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 1, "seconds": 18}, "line": " Downloading Empire + PowerShell Port Forward"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 2, "seconds": 13}, "line": " Explaining Empire Directory Structure"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 3, "seconds": 28}, "line": " Copying the PowerShell Template (Empire Module) to a working directory"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 4, "seconds": 30}, "line": " Creating the Empire Module"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 11, "seconds": 35}, "line": " Converting PowerShell Port Forward Script to an Empire Friendly Format"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 14, "seconds": 54}, "line": " Starting Empire"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 16, "seconds": 58}, "line": " Empire Agent Active"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 19, "seconds": 50}, "line": " Checking if the module worked.  It did not, begin troubleshooting!"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 24, "seconds": 20}, "line": " Found the Error! Huzzah!"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 24, "seconds": 50}, "line": " Reloading the module"}, {"machine": "Nightmare", "videoId": "6l4ZIKwzW8U", "timestamp": {"minutes": 26, "seconds": 4}, "line": " Executing the module again, this time it works."}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 0, "seconds": 18}, "line": " Start of Recon"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Finding hidden directory via Source"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 2, "seconds": 15}, "line": " Downloading NibbleBlog to help us with finding version information"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 3, "seconds": 59}, "line": " Identifying what vresion of NibblesBlog is running"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 4, "seconds": 42}, "line": " Using SearchSploit to find vulnerabilities"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 5, "seconds": 36}, "line": " Examining the Exploit"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 6, "seconds": 8}, "line": " Explanation of exploit"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 7, "seconds": 25}, "line": " Attempting to find valid usernames for NibblesBlog"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 9, "seconds": 13}, "line": " Finding usernames in /content/private"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 10, "seconds": 15}, "line": " Using Hydra to attempt to bruteforce"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 14, "seconds": 8}, "line": " Oh crap. Hydra not good idea we're blocked..."}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 0, "seconds": 1}, "line": " -- Some minor panicing about how to continue"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 15, "seconds": 40}, "line": " Using SSH Proxies to hit nibbles from another box (Falafel)"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 18, "seconds": 20}, "line": " Guessing the password"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 20, "seconds": 10}, "line": " Logged in, lets attempt our exploit!"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 22, "seconds": 46}, "line": " Code Execution achieved.  Lets get a reverse shell"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 24, "seconds": 53}, "line": " Reverse shell returned."}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 26, "seconds": 0}, "line": " Running sudo -l examine sudoer, then finding out why sudo took forever to return"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 26, "seconds": 50}, "line": " Privesc via bad sudo rules"}, {"machine": "Nibbles", "videoId": "s_0GcRGv6Ds", "timestamp": {"minutes": 32, "seconds": 10}, "line": " Alternative PrivEsc via RationalLove"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 0, "seconds": 1}, "line": " *Note: RationalLove was patched after I did this box.  So mistakenly thought it was still vulnerable.  Enjoy the fails/confusion!"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Begin of Recon"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 4, "seconds": 25}, "line": " Bruteforcing valid users"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 11, "seconds": 15}, "line": " Manually finding SQL Injection"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 13, "seconds": 13}, "line": " Using --string with SQLMap to aid Boolean Detection"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 15, "seconds": 41}, "line": " PHP Type Confusion ( == vs === with 0e12345) [Type Juggling]"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 18, "seconds": 35}, "line": " Attempting Wget Exploit with FTP Redirection (failed)"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 26, "seconds": 39}, "line": " Exploiting wget's maximum file length"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 33, "seconds": 30}, "line": " Reverse Shell Returned"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 36, "seconds": 19}, "line": " Linux Priv Checking Enum"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 41, "seconds": 0}, "line": " Checking web crap for passwords"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 44, "seconds": 0}, "line": " Grabbing the screenshot of tty"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 49, "seconds": 0}, "line": " Privesc via Yossi being in Disk Group (debugfs)"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 50, "seconds": 15}, "line": " Grabbing ssh root key off /dev/sda1"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 52, "seconds": 15}, "line": " Attempting RationLove (Fails, apparently machine got patched so notes were wrong /troll)"}, {"machine": "Falafel", "videoId": "CUbWpteTfio", "timestamp": {"minutes": 67, "seconds": 42}, "line": " Manually exploiting the SQL Injection! with Python"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 1, "seconds": 18}, "line": " Begin of Recon"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 4, "seconds": 55}, "line": " Start of aChat buffer Overflow: Finding the exploit script with Searchsploit"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 7, "seconds": 24}, "line": " Begin of replacing POC's Calc Shellcode with what is generated from MSFVenom"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 9, "seconds": 42}, "line": " Correction: Payload Size wrong, should be 3,xxx -- look at \"Payload Size\" I accidentally highlighted the size of the python file."}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 14, "seconds": 30}, "line": " Whoops, erased too much out of POC.  Lets correctly replace the shellcode this time and get a shell."}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 17, "seconds": 50}, "line": " Running PowerUp to find AutoLogon Credentials"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 20, "seconds": 5}, "line": " Running Code as Administrator"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 24, "seconds": 18}, "line": " First Privesc Method: Using Start-Process to execute commands as a different user because Invoke-Command did not work.  "}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 27, "seconds": 30}, "line": " Alternate way to read root.txt -- Alfred owns root.txt, so he can edit the files access list. Get-ACL to view access list and cacls to modify"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 33, "seconds": 12}, "line": " Summary of the box"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### BOX DONE"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 34, "seconds": 37}, "line": " Doing the box with Metasaploit, Warning: Lots of fails."}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 43, "seconds": 10}, "line": " Using meterpreters PortFwd to bypass ChatterBox's firewall and access port 445"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 51, "seconds": 25}, "line": " Doing the box with Empire !"}, {"machine": "Chatterbox", "videoId": "_dRrvJNdP-s", "timestamp": {"minutes": 58, "seconds": 20}, "line": " Using Empire's Run_As module to execute commands as Administrator"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 2, "seconds": 8}, "line": " Begin of Recon"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 14, "seconds": 0}, "line": " XXE Detection on Fulcrum API"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 17, "seconds": 40}, "line": " XXE Get Files"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 23, "seconds": 40}, "line": " XXE File Retrieval Working"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 24, "seconds": 30}, "line": " Lets Code a Python WebServer to Aid in XXE Exploitation"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 39, "seconds": 45}, "line": " Combining XXE + SSRF (Server Side Request Forgery) to gain Code Execution"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 47, "seconds": 28}, "line": " Shell Returned + Go Over LinEnum"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 56, "seconds": 49}, "line": " Finding WebUser's Password and using WinRM to pivot"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 66, "seconds": 0}, "line": " Getting Shell via WinRM, finding LDAP Credentials"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 74, "seconds": 0}, "line": " Using PowerView to Enumerate AD Users"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 87, "seconds": 6}, "line": " Start of getting a Shell on FILE (TroubleShooting FW)"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 95, "seconds": 35}, "line": " Getting shell over TCP/53 on FILE"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 97, "seconds": 58}, "line": " Finding credentials on scripts in Active Directories NetLogon Share, then finding a way to execute code as the Domain Admin... Triple Hop Nightmare"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 118, "seconds": 10}, "line": " Troubleshooting the error correctly and getting Domain Admin!"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 123, "seconds": 54}, "line": " Begin of unintended method (Rooting the initial Linux Hop)"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 129, "seconds": 54}, "line": " Root Exploit Found"}, {"machine": "Fulcrum", "videoId": "46RJxJ-Fm0Y", "timestamp": {"minutes": 132, "seconds": 25}, "line": " Mounting the VMDK Files and accessing AD."}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 1, "seconds": 45}, "line": " Start of NMAP"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 4, "seconds": 17}, "line": " Begin of Sharepoint/GoBuster (Special Sharepoint List)"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 6, "seconds": 32}, "line": " Manually browsing to Sitecontent (Get FTP Creds)"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 10, "seconds": 18}, "line": " Mirror FTP + Pillage for information, Find keypass in Tim's directory and crack it."}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 18, "seconds": 22}, "line": " Mounting/Mirroring ACCT Share with found Creds and finding hardcoded SQL Creds"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 25, "seconds": 24}, "line": " Logging into MSSQL with SQSH, enabling xp_cmdshell and getting a Nishang Rev Shell"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 34, "seconds": 35}, "line": " Finding SPBestWarmUp.ps1 Scheduled Task that runs as Administrator"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 40, "seconds": 0}, "line": " Begin of RottenPotato without MSF (Decoder's Lonely Potato)"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 45, "seconds": 56}, "line": " Using Ebowla Encoding for AV Evasion to create an exe for use with Lonely Potato"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 58, "seconds": 0}, "line": " Lonely Potato Running to return a Admin Shell"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### BOX DONE"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 64, "seconds": 22}, "line": " Finding CVE-2017-0213"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 68, "seconds": 33}, "line": " Installing Visual Studio 2015 && Compiling the exploit"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 75, "seconds": 50}, "line": " Exploit Compiled, trying to get it to work...."}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 78, "seconds": 11}, "line": " Just noticed the SPBestWarmUp.ps1 executed and gave us a shell!"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 88, "seconds": 37}, "line": " Found the issue, exploit seems to require interactive process"}, {"machine": "Tally", "videoId": "l-wzBhc9wFc", "timestamp": {"minutes": 90, "seconds": 0}, "line": " Begin of Firefox Exploit Cluster (Not recommended to watch lol).  It's a second unreliable way to get user"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 1, "seconds": 18}, "line": " Begin of Recon: Getting ubuntu version"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Navigating to the CrimeStoppers Page"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 5, "seconds": 15}, "line": " First Hint - Read The Source!"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 5, "seconds": 50}, "line": " 2nd Hint - No SQL Databases and playing with the upload form"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 7, "seconds": 55}, "line": " 3rd Hint - Setting Admin cookie to 1 to see whiterose.txt"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Explanation of PHP App and why I went down testing $op parameter"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 10, "seconds": 45}, "line": " Testing $op parameter, another hint what year is it?"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 12, "seconds": 20}, "line": " Finding out $op appends .php"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 13, "seconds": 5}, "line": " Using php b64 filter to view php files (\"Read the source luke\")"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 22, "seconds": 50}, "line": " Looking into PHP Wrappers to try to gain code execution"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 24, "seconds": 50}, "line": " Placing our PHP Script in a zip so we can reference it with zip://, also improperly upload it to the server"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 26, "seconds": 20}, "line": " Attempting to use the zip:// wrapper to execute our php script, then troubleshooting the bad upload."}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 30, "seconds": 30}, "line": " Easy way to copy binary data into BurpSuite (Base64)"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 34, "seconds": 10}, "line": " Getting a shell"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 37, "seconds": 18}, "line": " Downloading ThunderBird Directory and reading email + getting dom's password"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 46, "seconds": 20}, "line": " Begin of looking into Apache Rootkit (mod_rootme)"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 48, "seconds": 4}, "line": " Begin of using r2 (Radare) to analyze rootkit, basic intro"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 50, "seconds": 55}, "line": " Analyzing DarkArmy Function"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 55, "seconds": 30}, "line": " Grabbing the strings and using python to XOR them to get secret that allows root"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 58, "seconds": 35}, "line": " Get Root "}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ##### BOX DONE"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 59, "seconds": 10}, "line": " Potential rabbit hole in the binary /var/www/html/whiterose.txt in the binary"}, {"machine": "CrimeStoppers", "videoId": "bgKth1K44QA", "timestamp": {"minutes": 64, "seconds": 20}, "line": " Second way to get root, looking around at file modification times to find FunSociety in logs"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 1, "seconds": 19}, "line": " Begin of Enumeration"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 4, "seconds": 15}, "line": " Avoiding the Rabbit Hole on port 80 (IIS)"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 6, "seconds": 0}, "line": " Begin of Jenkins"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Using Jenkins Script Console (Groovy) to gain code execution"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Reverse TCP Shell via Nishang"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 17, "seconds": 0}, "line": " Reverse Shell returned.  PowerSplit dev branch to find unintended privesc (Tokens)"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 22, "seconds": 20}, "line": " Powersploit's Invoke-AllChecks completes"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 24, "seconds": 20}, "line": " Finding Keepass Database using Impack-SMBServer to transfer files"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Cracking the KeePass Database"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 30, "seconds": 20}, "line": " Using KeePass2 to open database"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 34, "seconds": 25}, "line": " PassTheHash via pth-winexe to gain administrator shell"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 35, "seconds": 20}, "line": " Grabbing root.txt that is hidden via Alternate Data Streams (ADS)"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### BOX DONE"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 39, "seconds": 0}, "line": " Using RottenPotato to escalate to root via MSF"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 41, "seconds": 0}, "line": " Using Unicorn to gain a reverse MSF SHell"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 45, "seconds": 20}, "line": " Performing the attack"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 48, "seconds": 0}, "line": " Impersonating Token to gain root"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ### Unintended Done.  Rest of video is me failing around, may be useful?"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Good Read: https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/"}, {"machine": "Jeeves", "videoId": "EKGBskG8APc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you want to try Rotten Potato without MSF Read this: https://decoder.cloud/2017/12/23/the-lonely-potato/"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 1, "seconds": 25}, "line": " Begin of recon"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 2, "seconds": 20}, "line": " Wiresharking NMAP to identify fingerprint"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 5, "seconds": 53}, "line": " Checking the WebPage"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 9, "seconds": 15}, "line": " Finding /sync and why web browser has a 403"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 12, "seconds": 45}, "line": " Using wfuzz to find what arguments /sync takes"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 15, "seconds": 45}, "line": " The actual wfuzz command"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 20, "seconds": 30}, "line": " Finding Bad Characters with wfuzz"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 24, "seconds": 51}, "line": " Getting command execution"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 32, "seconds": 0}, "line": " Getting a reverse shell"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 43, "seconds": 40}, "line": " Privesc to root abusing custom script"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " #### Box Done"}, {"machine": "Flux", "videoId": "XLIBbkQJKuY", "timestamp": {"minutes": 47, "seconds": 48}, "line": " Examining how NGINX/OpenResty was configured"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 0, "seconds": 23}, "line": " Explaining VM Layout"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 1, "seconds": 47}, "line": " Nmap Start"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 5, "seconds": 20}, "line": " Poking at Virtual Host Routing (Beehive & Calvin)"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 10, "seconds": 25}, "line": " Fixing GoBuster to find /cgi-bin/"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 11, "seconds": 48}, "line": " Enumerating WAF (Web Application Firewall), to see how it detects Shellshock"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 15, "seconds": 8}, "line": " Using VirtualHostRouting to navigate to Calvin.htb.htb"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 18, "seconds": 15}, "line": " Using ImageTragick to exploit Calvin"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 25, "seconds": 30}, "line": " Calvin Reverse shell returned"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 31, "seconds": 35}, "line": " Poking at /common, which allows pivot to Bastion Host"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 34, "seconds": 20}, "line": " SSH into the Bastion Host"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 38, "seconds": 45}, "line": " Explain SSH Local and Remote Port Forwarding"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 46, "seconds": 0}, "line": " Beehive Reverse Shell Returned"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Finding the root password via /common/containers/bastion-live/Dockerfile"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 54, "seconds": 50}, "line": " PrivEsc via Docker (much like the LXC shown in Calamity)"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 57, "seconds": 5}, "line": " Getting root access to filesystem"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ==== BOX DONE."}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 58, "seconds": 10}, "line": " Failing to get root shell via Crontab"}, {"machine": "Ariekei", "videoId": "Pc4tzsn-ats", "timestamp": {"minutes": 66, "seconds": 20}, "line": " Yeah screw crontab, lets just create an ssh key."}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " The CSRF Video I refer to is here: https://www.youtube.com/watch?v=d2nVDoVr0jE at 42m"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Start of Recon, nmap + dump web users"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 3, "seconds": 35}, "line": " Writing Python Program to dump uers."}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 12, "seconds": 0}, "line": " Dumping Users/Group done.  Now to dump PW Hints"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 24, "seconds": 0}, "line": " Python coding done."}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 24, "seconds": 57}, "line": " Examining the PW Reset Functionality, reset King (Unintended)"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 29, "seconds": 40}, "line": " Start of examining File Upload"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 33, "seconds": 37}, "line": " Finding local user + Exploiting File Upload"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 35, "seconds": 45}, "line": " Unintended Privilege Kernel Escalation (CVE-2017-16995)"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ----- Box Done, Rest is extra content -----"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 41, "seconds": 45}, "line": " Stealing CoolDude89's Cookie to gain Moderator Access"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 61, "seconds": 0}, "line": " Playing with moderator function to promote user to Admin"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 69, "seconds": 50}, "line": " Using Admin Permission to unmod admin and gain access to PM's"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 74, "seconds": 50}, "line": " Poking around the box looking for intended PrivEsc"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 82, "seconds": 50}, "line": " Exploiting Calc NodeJS App on Port 88"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 96, "seconds": 45}, "line": " Final Exploits of Calc App"}, {"machine": "Ariekei", "videoId": "2EW78bkwztg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Troll Cave VM Download: https://www.vulnhub.com/entry/trollcave-12,230/"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 1, "seconds": 5}, "line": " Start of Recon + Finding dompdf"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 8, "seconds": 30}, "line": " PHP Wrappers + Failed testing for RCE"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 11, "seconds": 35}, "line": " Writing Python Program to automate file disclosure bug"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 18, "seconds": 40}, "line": " Finding WebDav Configuration + Uploading Files for RCE"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 25, "seconds": 50}, "line": " Modifying Sokar's Forward Shell (PTY over HTTP)"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 33, "seconds": 55}, "line": " Forward shell returned"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 38, "seconds": 50}, "line": " Using Squid to pivot to ports listening locally + NMAP via ProxyChains"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 47, "seconds": 48}, "line": " Getting nmap on Inception to speed up scanning private network"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 59, "seconds": 16}, "line": " Nmap results returned for 192.168.0.1, FTP Anonymous Login"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 61, "seconds": 15}, "line": " Finding TFTP as a Running Service"}, {"machine": "Inception", "videoId": "J2I-5xPgyXk", "timestamp": {"minutes": 66, "seconds": 35}, "line": " Using TFTP to grab crontab & creating a pre-invoke apt script"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://www.vulnhub.com/entry/pinkys-palace-v2,229/"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 0, "seconds": 47}, "line": " Start of Recon, get debian rev from apache header."}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 3, "seconds": 15}, "line": " Explanation of NMAP Filtered // TCPWrapped"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 6, "seconds": 45}, "line": " Enumerating Wordpress"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 9, "seconds": 58}, "line": " Finding /secret folder with Port Knock Ports"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 10, "seconds": 42}, "line": " Trying to take advantage of open wordpress installer (Rabbit Hole)"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Writing port knock script"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 34, "seconds": 10}, "line": " Finally successful port knock, lets see what ports are open"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 38, "seconds": 40}, "line": " Using Cewl to build a wordlist, then using Hydra to bruteforce HTTP Post Login"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 44, "seconds": 57}, "line": " Login, ignoring an SSH Key :( and instead playing with an LFI!"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 63, "seconds": 50}, "line": " Reverse Shell via LFI + Log Poisoning"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 67, "seconds": 50}, "line": " Enough playing, lets crack SSH Key with John + sshng2john"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 73, "seconds": 35}, "line": " Analyzing qsub binary with radare2"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 84, "seconds": 0}, "line": " Finding the command injection in send function"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 86, "seconds": 14}, "line": " Exploiting command injection to setup SetUID Binary (Stefano - Pinky)"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 89, "seconds": 29}, "line": " Using SSH Keys to get proper session to pinky, then exploit cron script to get to demon"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 96, "seconds": 49}, "line": " Analyzing panel with Radare2"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 108, "seconds": 29}, "line": " Enough of me learning, lets just take the easy route and use GDB+PEDA"}, {"machine": "Pinkys", "videoId": "qZDGVqTCdXA", "timestamp": {"minutes": 116, "seconds": 39}, "line": " Finishing up the exploit with some Shell Code"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 1, "seconds": 8}, "line": " Start of Recon (NetDiscover/Masscan/Nmap)"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 5, "seconds": 37}, "line": " Finding the CGI Script and using Shellshock"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Start creating ShellShock python script"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 16, "seconds": 8}, "line": " Converting script \"Forward Shell\" for FW Evasion with mkfifo"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 40, "seconds": 0}, "line": " Adding Threading (Background Task) to improve script"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 45, "seconds": 0}, "line": " Script completed - Attempt to enumerate FW Rules"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 49, "seconds": 0}, "line": " Fumbling around with IPv6 (Check out Sneaky Video for more)"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 53, "seconds": 25}, "line": " Reverse shell via IPv6 and ncat"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 65, "seconds": 0}, "line": " Reading Bynarr's mail to get password and PrivEsc via LIME/Memory Dum"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " p"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 67, "seconds": 20}, "line": " Unintended PrivEsc via ShellShock + Environment Variables"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 78, "seconds": 20}, "line": " Begin of MITM (Man in the Middle) First with Ettercap"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 84, "seconds": 19}, "line": " Installing Bettercap2 + Usage"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 93, "seconds": 40}, "line": " Spoofing ARP and DNS with BetterCap"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 101, "seconds": 11}, "line": " Privesc to root via Git on case-insensitive FS"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 113, "seconds": 30}, "line": " Woot root, lets take a look at the IPTable FW"}, {"machine": "Sokar", "videoId": "k6ri-LFWEj4", "timestamp": {"minutes": 116, "seconds": 0}, "line": " Explaining the exploit a bit better"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Every time I saw CSRF, I means SSRF."}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 0, "seconds": 40}, "line": " Begin of Recon"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Start of GoBuster"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Finding a SSRF"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Passing arguments to cmd.aspx via SSRF"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 12, "seconds": 5}, "line": " Firewall Enumeration "}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 16, "seconds": 35}, "line": " Begin of setting up ICMP Reverse Shell"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 22, "seconds": 25}, "line": " Begin of sending ICMP Rev Shell to Server (Warning: Lots of Fail)"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 46, "seconds": 31}, "line": " Return of ICMP Rev Shell"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 52, "seconds": 20}, "line": " PrivEsc form IIS to Decoder"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 71, "seconds": 15}, "line": " Unzipping via Powershell"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 74, "seconds": 5}, "line": " Finding Administrator password hidden in NTFS File Stream"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 76, "seconds": 30}, "line": " Using Net Use to mount C: As Administrator"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 79, "seconds": 30}, "line": " Using IDA to analyze root.exe and grab the flag (Misses last character of hash)"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 84, "seconds": 15}, "line": " Using Invoke Command to execute root.exe as admin (Lots of Fail)"}, {"machine": "Minion", "videoId": "IbVmpr6IFQU", "timestamp": {"minutes": 92, "seconds": 52}, "line": " Opening up the Firewall then just using RDP to gain access"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Star of Recon"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 3, "seconds": 40}, "line": " GoBuster"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 4, "seconds": 45}, "line": " Getting banned and Pivoting to verify"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 10, "seconds": 20}, "line": " Logging into PFSense"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 16, "seconds": 50}, "line": " Manually Exploiting PFsense "}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 38, "seconds": 30}, "line": " Using Metasploit to exploit"}, {"machine": "Sense", "videoId": "d2nVDoVr0jE", "timestamp": {"minutes": 42, "seconds": 0}, "line": " Creating a Bruteforce Script in Python ( CSRF )"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Begin of recon"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Finding the vulnerable Wordpress Plugin"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 17, "seconds": 50}, "line": " Exploiting lcars plugin "}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 28, "seconds": 30}, "line": " Logging into WP and Getting Reverse Shell"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 35, "seconds": 0}, "line": " Wordpress RevShell Returned"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 40, "seconds": 0}, "line": " Using Meterpreter to pivot and provide access to MySQL"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 50, "seconds": 0}, "line": " MySQL Shell Returned"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 52, "seconds": 0}, "line": " Logging into Joomla and Getting Reverse Shell"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 57, "seconds": 20}, "line": " Joomla Reverse Shell returned"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 59, "seconds": 0}, "line": " Getting Reverse Shell on Host OS (port 443)"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 62, "seconds": 0}, "line": " Shell Returned begin of local privesc recon"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 72, "seconds": 6}, "line": " Beginning of Binary Exploitation "}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 81, "seconds": 0}, "line": " Start writing exploit script "}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ===== Extra Content ======"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 88, "seconds": 30}, "line": " Analyzing the PHP SQL Injection Scripts"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 96, "seconds": 30}, "line": " Viewing what SQLMap does to exploit this"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 100, "seconds": 0}, "line": " Stepping through Double Query Injection"}, {"machine": "Enterprise", "videoId": "NWVJ2b0D1r8", "timestamp": {"minutes": 107, "seconds": 20}, "line": " Writing our own SQL Injection Exploit Script"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " For the unintentional method, I'm just downloading a file versus doing it live on the box because I wanted to save doing it live for another video.  "}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " A really good SSRF Presentation: https://www.youtube.com/watch?v=D1S-G8rJrEk"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 1, "seconds": 38}, "line": " Start of nmap"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 3, "seconds": 40}, "line": " Accessing port 60000"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 6, "seconds": 20}, "line": " Manually enumerating ports on localhost via SSRF"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 7, "seconds": 0}, "line": " Using wfuzz to portscan localhost via SSRF"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Tomcat creds exposed & Uploading tomcat reverse shell"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Return of shell"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 14, "seconds": 20}, "line": " Extracting NTDS + SYSTEM Hive"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 20, "seconds": 20}, "line": " Using HashKiller to crack the hashes"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 21, "seconds": 30}, "line": " Escalating to Atanas & Identifying wget vulnerability"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 27, "seconds": 10}, "line": " Starting exploit"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 33, "seconds": 22}, "line": " Exploit failed, light debugging"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 35, "seconds": 40}, "line": " Issue found, not listening all interfaces"}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 39, "seconds": 35}, "line": " Root shell returned."}, {"machine": "Kotarak", "videoId": "38e-sxPWiuY", "timestamp": {"minutes": 40, "seconds": 10}, "line": " Unintentional Root Method (Edited Footage, IP Change)"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Begin of NMAP"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 3, "seconds": 0}, "line": " GoBuster (Fails)"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 8, "seconds": 15}, "line": " Screw GoBuster, BurpSpider FTW"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 9, "seconds": 12}, "line": " Examing Routes File to find more pages"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 10, "seconds": 10}, "line": " Finding Credentials and downloading backup"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Cracking the zip with fcrackzip"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Finding more credentials (SSH) within MongoSource"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 21, "seconds": 50}, "line": " Privesc to Tom User"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 35, "seconds": 4}, "line": " Analyzing Backup Binary File"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 36, "seconds": 49}, "line": " Using strace to find binary password"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 40, "seconds": 25}, "line": " Finding blacklisted characters/words"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Unintended method one, abusing CWD"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 52, "seconds": 20}, "line": " Unintended method two, wildcards to bypass blacklist"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 54, "seconds": 45}, "line": " Unintended method three, command injection via new line"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 59, "seconds": 15}, "line": " Intended root Buffer Overflow ASLR Brute Force"}, {"machine": "Node", "videoId": "sW10TlZF62w", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you want to see more detail on the ret2libc check out October: https://www.youtube.com/watch?v=K05mJazHhF4&t=21m14s"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Start of nmap"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 3, "seconds": 22}, "line": " Poking at a rabbit hole (8080)"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 8, "seconds": 8}, "line": " GoBuster to find hidden directory"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Finding SQL Creds in hidden directory"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Using dbeaver to enumerate database"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 16, "seconds": 50}, "line": " Impacket-PSExec to Admin"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 19, "seconds": 0}, "line": " Proving James is not an Admin"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 20, "seconds": 35}, "line": " Using MSF to Enable Remote Desktop to do Incident Response"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 27, "seconds": 0}, "line": " Start of Remote Desktop Looking at Event Log + Active Directory"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 31, "seconds": 0}, "line": " Installing Sysmon to get better logs"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 36, "seconds": 15}, "line": " Looking at Sysmon Logs"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 42, "seconds": 20}, "line": " Proving the PrivEsc was due to Impacket-PSExec not cleaning up"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 48, "seconds": 0}, "line": " Using Forensics to get Service Creation Date"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 53, "seconds": 30}, "line": " Finding a HTB User creating a Git Issue to Impacket (LOL)"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 55, "seconds": 10}, "line": " Intended Route - Forging a Kerberos Ticket MS14-068"}, {"machine": "Mantis", "videoId": "VVZZgqIyD0Q", "timestamp": {"minutes": 71, "seconds": 0}, "line": " Explaining why the unintended route probably got created"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you want some more details about the actual ShellShock exploit, check out the Beep Video.  "}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 0, "seconds": 39}, "line": " Begin Nmap, OS Enum via SSH/HTTP Banner"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 5, "seconds": 0}, "line": " GoBuster"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 7, "seconds": 8}, "line": " Viewing CGI Script"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 8, "seconds": 50}, "line": " Begin NMAP Shellshock"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Debugging Nmap HTTP Scripts via Burp"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 11, "seconds": 10}, "line": " Fixing the HTTP Request & nmap script"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Performing Shellshock & more fixing"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 18, "seconds": 25}, "line": " Getting a reverse shell"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 21, "seconds": 19}, "line": " Running LinEnum.sh"}, {"machine": "Shocker", "videoId": "IBlTdguhgfY", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Rooting the box"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 0, "seconds": 49}, "line": " Nmap"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 1, "seconds": 31}, "line": " Examining some odd behavior. Nmap different result than browser."}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Getting to /admin and testing for Zone Transfer"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Testing SSH Default Raspberry Pi Creds"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 6, "seconds": 11}, "line": " Escalate to root 'sudo su'"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 7, "seconds": 10}, "line": " Recovering the deleted root.txt"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 8, "seconds": 38}, "line": " GrepFu"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 10, "seconds": 40}, "line": " Downloading /dev/sdb via SSH"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 12, "seconds": 48}, "line": " Running Binwalk against it"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 13, "seconds": 18}, "line": " Trying to recover with TestDisk"}, {"machine": "Mirai", "videoId": "SRmvRGUuuno", "timestamp": {"minutes": 14, "seconds": 37}, "line": " Trying to recover with PhotoRec"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 1, "seconds": 0}, "line": " Nmap"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 2, "seconds": 23}, "line": " Examining the Web Page"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 4, "seconds": 8}, "line": " GoBuster"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 4, "seconds": 53}, "line": " Finding /uploads/ Directory"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 5, "seconds": 50}, "line": " Finding /secret_area_51/ Directory"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 6, "seconds": 20}, "line": " Using Audacity to find Steg in Audio"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 8, "seconds": 50}, "line": " FTP With Creds revealed from Steg"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 10, "seconds": 6}, "line": " Examining files downloaded from FTP"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 12, "seconds": 43}, "line": " Finding decryption key + blob"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 14, "seconds": 33}, "line": " Using Python seccure to decrypt ecc"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 16, "seconds": 5}, "line": " SSH Into Shrek as SEC"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 16, "seconds": 35}, "line": " Farquad Rabbit Hole"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 17, "seconds": 42}, "line": " Incident Response : Finding files modified between two times"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 20, "seconds": 47}, "line": " What is /usr/src/thoughts.txt?"}, {"machine": "Shrek", "videoId": "tI592BjTd4o", "timestamp": {"minutes": 21, "seconds": 45}, "line": " Privesc through cron running: chown *"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Blog Post: https://reboare.github.io/lxd/lxd-escape.html"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 1, "seconds": 28}, "line": " Begin of recon"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 2, "seconds": 20}, "line": " GoBuster"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 3, "seconds": 30}, "line": " admin.php discovered, finding the pw"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 4, "seconds": 50}, "line": " Getting Code Execution"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 7, "seconds": 45}, "line": " Finding out why Reverse Shells weren't working"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 9, "seconds": 45}, "line": " Getting a reverse shell by renaming nc"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Transfering files via nc"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 14, "seconds": 0}, "line": " Opening the wav file"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 16, "seconds": 25}, "line": " Using audiodiff to identify differences in sound"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 17, "seconds": 5}, "line": " The next step, why is the same song there twice?"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 19, "seconds": 25}, "line": " Importing files into Audacity and Inverting"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 22, "seconds": 25}, "line": " Attempting to exploit the process blacklist"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 24, "seconds": 25}, "line": " Unintended root LXC Background"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 28, "seconds": 30}, "line": " Creating an Alpine LXC"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 30, "seconds": 40}, "line": " Importing the image into lxc"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 32, "seconds": 0}, "line": " Creating the container"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 32, "seconds": 40}, "line": " Adding the host drive to container"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 34, "seconds": 20}, "line": " Starting the container and entering it"}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 35, "seconds": 5}, "line": " Examining the Process Blacklist script "}, {"machine": "Calamity", "videoId": "EloOaaGg3nA", "timestamp": {"minutes": 35, "seconds": 54}, "line": " Running through the exploit again on a Ubuntu Host"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 0, "seconds": 38}, "line": " Start of Recon"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Finding NMAP Scripts (Probably a stupid way)"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Running Safe Scripts - Not -sC, which is default."}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 2, "seconds": 52}, "line": " Listing NMAP Script Categories (Prob a really stupid way)"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 3, "seconds": 18}, "line": " Really Cool Grep (Only show matching -oP)"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 4, "seconds": 40}, "line": " Nmap Safe Script Output"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Exploiting MS17-010 with MSF"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 7, "seconds": 40}, "line": " Setting up Dev Branch of Empire"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 9, "seconds": 7}, "line": " Starting a Listener"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 10, "seconds": 55}, "line": " Getting a PowerShell Oneliner to launch payload"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 12, "seconds": 16}, "line": " Invoke-Expression (IEX) to Execute Launcher"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 13, "seconds": 25}, "line": " Interacting with a single agent"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Using Modules - PowerUp Invoke-AllChecks"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 14, "seconds": 40}, "line": " Fixing weird issue with PS Module"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 16, "seconds": 15}, "line": " Invoke-AllChecks finished"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 17, "seconds": 15}, "line": " Loading PS Modules into Memory"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 17, "seconds": 40}, "line": " Executing funcitons out of above module"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 18, "seconds": 20}, "line": " Why I don't pass to MSF via InjectShellcode"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 22, "seconds": 45}, "line": " How I pass from Empire to MSF (Unicorn + IEX)"}, {"machine": "Blue", "videoId": "YRsfX6DW10E", "timestamp": {"minutes": 25, "seconds": 53}, "line": " Just running Powershell CMDs from Empire (Shell)"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 0, "seconds": 52}, "line": " Recon - NMAP"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 4, "seconds": 5}, "line": " Recon - Getting Linux Distro"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 4, "seconds": 35}, "line": " Recon - GoBuster"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Analyzing Jail.c source"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 9, "seconds": 45}, "line": " Begin Binary Exploitation"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 15, "seconds": 10}, "line": " Verify Buffer Overflow"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 17, "seconds": 35}, "line": " Create Exploit Skeleton"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 20, "seconds": 50}, "line": " Finding EIP Overwrite"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 23, "seconds": 2}, "line": " Adding Reverse TCP Shellcode"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 30, "seconds": 15}, "line": " Switching to \"Socket Re-Use\" Shellcode"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 32, "seconds": 20}, "line": " Shell Returned"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 34, "seconds": 0}, "line": " NFSv3 Privesc Begin"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 40, "seconds": 15}, "line": " Begin incorrectly playing with SetUID"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 43, "seconds": 10}, "line": " SELinux Escape"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 45, "seconds": 25}, "line": " Using SELinux Escape to copy SSH Key"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 48, "seconds": 55}, "line": " Logging in as Frank"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 50, "seconds": 0}, "line": " Privesc to adm (sudo rvim)"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 51, "seconds": 44}, "line": " Begin of finding a way to root"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 55, "seconds": 58}, "line": " Begin cracking rar file "}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 57, "seconds": 18}, "line": " Using Hashcat to generate custom wordlist"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 60, "seconds": 40}, "line": " Cracking with JohnTheRipper"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 62, "seconds": 30}, "line": " RsaCtfTool to exploit weak SSH Pub Key"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 63, "seconds": 36}, "line": " Login as root with SSH Private Key"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 64, "seconds": 11}, "line": " EXTRA CONTENT: Alternative Privesc to ADM (NFS)"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 65, "seconds": 21}, "line": " Creating a directory to give other users NFS Write access"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 67, "seconds": 30}, "line": " Correct way to do SetUID Program"}, {"machine": "Jail", "videoId": "80-73OYcrrk", "timestamp": {"minutes": 71, "seconds": 4}, "line": " Using SetUID Programs to write to disk"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 0, "seconds": 0}, "line": " Intro"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 1, "seconds": 58}, "line": " Begin Recon (NMAP)"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 4, "seconds": 19}, "line": " GoBuster HTTP + HTTPS"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 6, "seconds": 35}, "line": " Accessing Pages "}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 7, "seconds": 5}, "line": " Using Hydra against HTTP + HTTPS Web Forms"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Logging into HTTP and hunting for vulns"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 17, "seconds": 0}, "line": " Second Hydra attempt against HTTPS"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 17, "seconds": 57}, "line": " Logging into HTTPS (phpLiteAdmin)"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 20, "seconds": 17}, "line": " Chaining Exploits to get Code Execution"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 26, "seconds": 38}, "line": " Reverse Shell Returned"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 28, "seconds": 0}, "line": " LinEnum.sh Script Review"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 31, "seconds": 30}, "line": " Watching for new Processes"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 37, "seconds": 0}, "line": " Found the error in script :)"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 39, "seconds": 30}, "line": " Getting reverse root shell"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 41, "seconds": 51}, "line": " Intended Route to get User"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 46, "seconds": 12}, "line": " Reviewing Knockd configuration"}, {"machine": "Nineveh", "videoId": "K9DKULxSBK4", "timestamp": {"minutes": 49, "seconds": 33}, "line": " Doing the PortKnock"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 0, "seconds": 1}, "line": " The STTY command I messed up was simply `stty rows ## cols ##`"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 1, "seconds": 15}, "line": " Begin Recon with Reconnoitre"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 3, "seconds": 15}, "line": " Examining findings from Reconnoitre"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 6, "seconds": 50}, "line": " Decompiling java Jar Files with JAD"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 8, "seconds": 18}, "line": " Using JD-GUI"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 10, "seconds": 33}, "line": " Running WPScan"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 12, "seconds": 10}, "line": " Manually enumerating wordpress users"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 12, "seconds": 43}, "line": " SSH To the box and PrivEsc"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 0, "seconds": 1}, "line": " ------ Box Completed, Below extra content (Some mistakes, pretty much do this live without prep)"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 15, "seconds": 30}, "line": " Rabbit hole, gaining access through FTP"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 17, "seconds": 9}, "line": " Finding Wordpress DB Password"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 18, "seconds": 33}, "line": " Switching to WWW-DATA by using phpMyAdmin + Wordpress"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 20, "seconds": 10}, "line": " Generating a PHP Password for Wordpress"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 21, "seconds": 50}, "line": " Gaining code execution with Wordpress Admin access"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 25, "seconds": 40}, "line": " Shell as www-data"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 26, "seconds": 40}, "line": " Enumerating Kernel Exploits with Linux-Exploit-Suggester"}, {"machine": "Blocky", "videoId": "C2O-rilXA6I", "timestamp": {"minutes": 30, "seconds": 10}, "line": " Attempting CVE-2017-6074 Dccp Kernel Exploit (Unstable AF)"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 0, "seconds": 17}, "line": " Why I like Tmux"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 1, "seconds": 20}, "line": " Creating Tmux Session"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 1, "seconds": 45}, "line": " Bash: Ctrl + R - Recursive Search"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 2, "seconds": 2}, "line": " Tmux: Prefix Key (default Ctrl+B)"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 2, "seconds": 5}, "line": " Tmux: New Window - Prefix c"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 2, "seconds": 7}, "line": " Tmux: Switch Window - Prefix #"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 2, "seconds": 36}, "line": " My Tmux Config"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 2, "seconds": 50}, "line": " Demo of \"nested tmux\""}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 4, "seconds": 0}, "line": " Tmux: Rename Window - Prefix ,"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 4, "seconds": 20}, "line": " Tmux: Send/Join Pane Prefix [s|j]"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 5, "seconds": 8}, "line": " Tmux: Setting Search to Vi mode"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Tmux: Enter edit mode Ctrl+["}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Tmux: Showing off tmux Searching"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 6, "seconds": 3}, "line": " Tmux: Copy and pasting lots of text"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 6, "seconds": 27}, "line": " Tmux: Logging Plugin"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://github.com/tmux-plugins/tmux-logging"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 7, "seconds": 30}, "line": " Tmux: Splitting"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Tmux: Zooming - Prefix z"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 9, "seconds": 0}, "line": " Tmux: Moving Panes"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 9, "seconds": 20}, "line": " Bash: Cycle through past arguments Alt+."}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 9, "seconds": 50}, "line": " Bash: Moving cursor to begin, end or skipping words"}, {"machine": "Blocky", "videoId": "Lqehvpe_djs", "timestamp": {"minutes": 10, "seconds": 45}, "line": " Tmux: Help Page Prefix ?"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Image in the intro is an XKCD comic if you didn't immediately recognize it as XKCD check out https://xkcd.com"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 0, "seconds": 24}, "line": " Recon with Sparta"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Enumerating SSL Certificate "}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 3, "seconds": 55}, "line": " Manually View SSL Certificate"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 4, "seconds": 35}, "line": " VirtualHostRouting Explanation"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 7, "seconds": 42}, "line": " SQL Injection - Auth Bypass"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 13, "seconds": 0}, "line": " Dumping the Database with SQLMap"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 16, "seconds": 45}, "line": " Begin of Web Exploit (Regex //e)"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 23, "seconds": 0}, "line": " Getting a Shell"}, {"machine": "Europa", "videoId": "OsxDB41jg6A", "timestamp": {"minutes": 27, "seconds": 10}, "line": " Begin PrivEsc (CronJob)"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 1, "seconds": 26}, "line": " Enumeration Start"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 2, "seconds": 58}, "line": " WPScan Start"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 5, "seconds": 40}, "line": " Directory Scanning with GoBuster"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 10, "seconds": 54}, "line": " Examining WPScan Output"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 13, "seconds": 40}, "line": " Bruteforcing with WPScan"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 14, "seconds": 40}, "line": " Bruteforcing HTTP Post with Hydra"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 18, "seconds": 30}, "line": " Edit WP Theme to get Code Execution"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 22, "seconds": 9}, "line": " Return of Reverse Shell"}, {"machine": "Apocalyst", "videoId": "TJVghYBByIA", "timestamp": {"minutes": 26, "seconds": 25}, "line": " Privelege Escalation Word Writeable Passwd"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Articles Mentioned:"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ictf.cs.ucsb.edu/pages/the-2016-2017-ictf-ddos.html"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://thehackerblog.com/poisoning-the-well-compromising-godaddy-customer-support-with-blind-xss/index.html"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 0, "seconds": 46}, "line": " NMAP Scan and Review"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 1, "seconds": 53}, "line": " GoBuster and identify User Agent based Routing"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 4, "seconds": 9}, "line": " SQLMap the Login"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 8, "seconds": 0}, "line": " Login to the page"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 8, "seconds": 55}, "line": " Begin of XSS"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 11, "seconds": 15}, "line": " Bypass first XSS Filter"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Encoded JS Payload - Getting XSS to call back to us"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 16, "seconds": 56}, "line": " Using Python to encode JS which will call back to us."}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 24, "seconds": 25}, "line": " Executing the paylaod"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 25, "seconds": 6}, "line": " Stage 2 XSS Attack - XMLHttpRequest"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 31, "seconds": 30}, "line": " Troubleshooting, No code works the first time."}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 36, "seconds": 0}, "line": " Stage 2 Fixed."}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 40, "seconds": 57}, "line": " Initial access to /admin"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 42, "seconds": 0}, "line": " Finding Command Injection"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 43, "seconds": 40}, "line": " Explanation of IP \"Encoding\""}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 48, "seconds": 40}, "line": " Rev Shell obtained"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 49, "seconds": 30}, "line": " How I found out about the IP Encode Trick"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 51, "seconds": 40}, "line": " Begin of PrivEsc"}, {"machine": "Holiday", "videoId": "FvHyt7KrsPE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Creator: g0blin"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you're wondering how this could be an hour long video, over half the video is talking about IPv6."}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 0, "seconds": 0}, "line": " Intro"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 0, "seconds": 44}, "line": " Recon + Web Enum"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 1, "seconds": 33}, "line": " SQL Injection"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 5, "seconds": 30}, "line": " Start of IPv6 Talk"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 6, "seconds": 30}, "line": " What is an IPv6 IP Address?"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 11, "seconds": 27}, "line": " Types of IPv6 Addresses"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 14, "seconds": 6}, "line": " IPv6 Subnetting Explained"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 21, "seconds": 20}, "line": " End of IPv6 Primer, Exploit time!"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 22, "seconds": 43}, "line": " Method 1: Getting MAC and calculating fe80"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 30, "seconds": 30}, "line": " Method 2: Enumerating Networks by pinging Multicast"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 33, "seconds": 56}, "line": " Extra: Getting Windows to respond from Multicast Ping"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 38, "seconds": 7}, "line": " Extra: NMAP Scanning ipv6 local networks"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 40, "seconds": 15}, "line": " Convert RPM to DEB (Needed for install nmap on tenten)"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 41, "seconds": 30}, "line": " Intended Solution: Getting IPv6 via SNMP"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 43, "seconds": 58}, "line": " No SNMP MIB Output"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 45, "seconds": 58}, "line": " Getting SNMP MIBS Installed and Configured"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 47, "seconds": 52}, "line": " Tool: Enyx - SNMPv6 Enumeration via Python"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 50, "seconds": 44}, "line": " Privesc Enumeration"}, {"machine": "Sneaky", "videoId": "1UGxjqTnuyo", "timestamp": {"minutes": 52, "seconds": 49}, "line": " Buffer Overflow"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 1, "seconds": 30}, "line": " Rabbit Hole - Searching for SuperCMS"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 6, "seconds": 23}, "line": " Running enumeration in the background (GoBuster)"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 7, "seconds": 40}, "line": " Rabbit Hole - SQLMap Blog SinglePost.php"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 12, "seconds": 4}, "line": " Finding PHP Files in /cmsdata/ (GoBuster)"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 12, "seconds": 53}, "line": " Manual Identification of SQL Injection"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 15, "seconds": 50}, "line": " SQL Injection Explanation"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 17, "seconds": 20}, "line": " Rabbit Hole - Starting SQLMap in the Background"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 18, "seconds": 10}, "line": " SQL Union Injection Explanation"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 19, "seconds": 30}, "line": " Identifying \"Bad/Filtered Words\" in SQL Injection"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 21, "seconds": 2}, "line": " SQL Union Finding number of items returned"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 21, "seconds": 48}, "line": " Returning data from Union Injection"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 22, "seconds": 48}, "line": " SQL Concat Explanation"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 23, "seconds": 55}, "line": " Enumerating SQL Databases Explanation (Information_Schema)"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 25, "seconds": 46}, "line": " Returning Database, Table, Columns from Information_Schema"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 29, "seconds": 30}, "line": " Scripting to dump all columns"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 36, "seconds": 45}, "line": " Listing of columns in SuperCMS"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 37, "seconds": 15}, "line": " Dumping User Credentials"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 41, "seconds": 36}, "line": " Logging in and exploiting SuperCMS"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 47, "seconds": 0}, "line": " Return of reverse shell"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 48, "seconds": 40}, "line": " Transfering small files from shell to my machine"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 50, "seconds": 56}, "line": " Using RsaCtfTool to decrypt contents with weak public key"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 52, "seconds": 52}, "line": " Breaking weak RSA manually"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 61, "seconds": 20}, "line": " Begin PrivEsc to Root"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 62, "seconds": 40}, "line": " Transering large files with NC"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 63, "seconds": 50}, "line": " Analyzing SuperShell with BinaryNinja (Paid)"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 66, "seconds": 4}, "line": " Analyzing SuperShell with Radare2 (Free)"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 68, "seconds": 22}, "line": " Exploiting SuperShell"}, {"machine": "Charon", "videoId": "_csbKuOlmdE", "timestamp": {"minutes": 72, "seconds": 46}, "line": " Encore.  Getting a Root Shell with SetUID Binary"}, {"machine": "Pivoting", "videoId": "HQkDL-xh7es", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Really wanted to show people this method of pivoting, but ran into issues last video.  This video doesn't explain any exploits, just uses plink.exe to set up a tunnel which we can use as a gateway for Reverse_TCP Sessions."}, {"machine": "Pivoting", "videoId": "HQkDL-xh7es", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you wanted to see the explanations behind exploits check out the original video: https://www.youtube.com/watch?v=ZfPVGJGkORQ"}, {"machine": "Pivoting", "videoId": "HQkDL-xh7es", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Apologies for any confusion/wasted time."}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Heads up.  The pivot idea, was a pretty big fail.  Should of prep'd more but was short on time.  Enjoy watching me struggle, if you wanted to see the pivot stuff working I uploaded an updated video here: https://youtu.be/HQkDL-xh7es"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 1, "seconds": 50}, "line": " Nmap Results (Discovery of WebDav)"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 4, "seconds": 35}, "line": " DavTest"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 6, "seconds": 22}, "line": " HTTP PUT Upload Files"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 7, "seconds": 0}, "line": " MSFVenom Generate aspx payload"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 13, "seconds": 0}, "line": " User Shell Returned"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 16, "seconds": 23}, "line": " Get Admin Shell (ms14-070)"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 17, "seconds": 14}, "line": " Beginning of Pivot Fail.  Socks Proxy"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 29, "seconds": 35}, "line": " Shell on Grandpa (CVE-2017-7269)"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 32, "seconds": 45}, "line": " Using portfwd to access ports not exposed to routable interfaces"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 34, "seconds": 45}, "line": " Cracking LM Hash Explanation"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 38, "seconds": 30}, "line": " Cracking LM Hashes via Hashcat"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 41, "seconds": 30}, "line": " Grandpa acts cranky.  Revert. "}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 42, "seconds": 30}, "line": " Expected behavior when exploiting via CVE-2017-7269.  None of that auto system weirdness (45:20 gets admin)"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 45, "seconds": 50}, "line": " Using Hashcat to crack NTLM using LM Hashes"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 48, "seconds": 50}, "line": " Finally log into SMB using the portfwd from 32:45"}, {"machine": "Granny", "videoId": "ZfPVGJGkORQ", "timestamp": {"minutes": 49, "seconds": 7}, "line": " Random pivot attempt failure."}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 0, "seconds": 1}, "line": " OLEVBA - https://github.com/decalage2/oletools/wiki/olevba"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 1, "seconds": 58}, "line": " Extract Macro with olevba"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 2, "seconds": 40}, "line": " ExifTool to examine Document Metadata (Comments used in Macro)"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 3, "seconds": 48}, "line": " Examining Macro Code"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 4, "seconds": 21}, "line": " Using Python to explan Right(left))"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 7, "seconds": 20}, "line": " Opening ProcMon"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 9, "seconds": 7}, "line": " Why you should be careful when executing portions of \"bad code\""}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 9, "seconds": 55}, "line": " Viewing Macro's in Word and DeObfuscating by changing Shell to Print"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 12, "seconds": 17}, "line": " Start of Obfuscated Powershell (after de-base64)"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 13, "seconds": 21}, "line": " Malicious Powershell Code "}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 15, "seconds": 15}, "line": " Upload to VirusTotal"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 16, "seconds": 51}, "line": " Looking at process explorer"}, {"machine": "Granny", "videoId": "cjlctph9cZE", "timestamp": {"minutes": 20, "seconds": 21}, "line": " Looking at Wireshark"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 1, "seconds": 38}, "line": " Go to HTTPFileServer"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 2, "seconds": 56}, "line": " Explanation of Vulnerability"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 4, "seconds": 49}, "line": " Testing the Exploit"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 6, "seconds": 25}, "line": " Getting rev tcp shell with Nishang"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 11, "seconds": 54}, "line": " Shell returned"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 13, "seconds": 15}, "line": " Finding exploits with Sherlock"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 15, "seconds": 15}, "line": " Using Empire Module without Empire for Privesc"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 21, "seconds": 0}, "line": " Start of doing the box with Metasploit"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 22, "seconds": 36}, "line": " Reverse Shell Returned (x32)"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 24, "seconds": 45}, "line": " MSF Error during PrivEsc"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 25, "seconds": 35}, "line": " Reverse Shell Returned (x64)"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 26, "seconds": 19}, "line": " Same PrivEsc as earlier, different result"}, {"machine": "Optimum", "videoId": "kWTnVBIpNsE", "timestamp": {"minutes": 28, "seconds": 47}, "line": " Examining how Rejetto MSF Module works with Burp"}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 1, "seconds": 2}, "line": " Going over NMAP"}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Anonymous FTP + File Upload"}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 4, "seconds": 30}, "line": " MSFVenom "}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 7, "seconds": 20}, "line": " Metasploit"}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 10, "seconds": 0}, "line": " Exploit Suggestor"}, {"machine": "Devel", "videoId": "2LNyAbroZUk", "timestamp": {"minutes": 11, "seconds": 30}, "line": " Getting Root"}, {"machine": "Devel", "videoId": "6S4A2nhHdWg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Bitterman: https://github.com/ctfs/write-ups-2015/blob/master/camp-ctf-2015/pwn/bitterman-300/bitterman?raw=true"}, {"machine": "Devel", "videoId": "6S4A2nhHdWg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Good Links."}, {"machine": "Devel", "videoId": "6S4A2nhHdWg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " PLT/GOT explanation: https://www.technovelty.org/linux/plt-and-got-the-key-to-code-sharing-and-dynamic-libraries.html"}, {"machine": "Devel", "videoId": "6S4A2nhHdWg", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Great Writeup to similar CTF Challenge: https://blog.skullsecurity.org/2015/defcon-quals-r0pbaby-simple-64-bit-rop"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 0, "seconds": 39}, "line": " Basic Web Page Discovery"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 3, "seconds": 30}, "line": " Examining Cookies - Pt1 (Burp Sequencer)"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 5, "seconds": 5}, "line": " Fuzzing Usernames (2nd Order SQL Injection)"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 7, "seconds": 15}, "line": " Examining Cookies - Pt2"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 7, "seconds": 40}, "line": " Cookie Bitflip"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 12, "seconds": 45}, "line": " Oracle Padding Attack - Pt1"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 15, "seconds": 30}, "line": " Rooting the Box"}, {"machine": "Lazy", "videoId": "3VxZNflJqsw", "timestamp": {"minutes": 22, "seconds": 50}, "line": " Oracle Padding Attack - Pt2"}, {"machine": "Haircut", "videoId": "9ZXG1qb8lUI", "timestamp": {"minutes": 1, "seconds": 45}, "line": " GoBuster"}, {"machine": "Haircut", "videoId": "9ZXG1qb8lUI", "timestamp": {"minutes": 4, "seconds": 40}, "line": " Exploiting exposed.php"}, {"machine": "Haircut", "videoId": "9ZXG1qb8lUI", "timestamp": {"minutes": 11, "seconds": 40}, "line": " Getting Shell"}, {"machine": "Haircut", "videoId": "9ZXG1qb8lUI", "timestamp": {"minutes": 20, "seconds": 9}, "line": " Screen Privesc"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 0, "seconds": 27}, "line": " Port Enumeration"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 2, "seconds": 54}, "line": " UDP Port Review"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 3, "seconds": 40}, "line": " TFTP Enumeration"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 6, "seconds": 30}, "line": " Cracking Squid PW"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 8, "seconds": 0}, "line": " FoxyProxy Setup"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 9, "seconds": 45}, "line": " Burp Setup"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Running Commands"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 21, "seconds": 20}, "line": " Reverse Shell"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 22, "seconds": 30}, "line": " PrivEsc to Alekos #1"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 28, "seconds": 0}, "line": " PrivEsc to Alekos #2"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 30, "seconds": 37}, "line": " Root #1 (SymLink)"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 30, "seconds": 48}, "line": " Root #2 (Tar Checkpoint)"}, {"machine": "Joker", "videoId": "5wyvpJa9LdU", "timestamp": {"minutes": 44, "seconds": 45}, "line": " Root #3 (Remove Development)"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 0, "seconds": 39}, "line": " Nmap Results"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 1, "seconds": 15}, "line": " DNS Enumeration"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 4, "seconds": 8}, "line": " HTTP VirtualHost Routing"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 5, "seconds": 28}, "line": " DirSearch (Web Enumeration) "}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 8, "seconds": 50}, "line": " HTTP Redirect Vulnerability"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 13, "seconds": 23}, "line": " PW in Balance-Transfer"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 18, "seconds": 0}, "line": " File Upload, WebShell"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 21, "seconds": 48}, "line": " First Shell"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 30, "seconds": 10}, "line": " First Privesc Method (SUID)"}, {"machine": "Bank", "videoId": "JRPWFSzFaG0", "timestamp": {"minutes": 31, "seconds": 38}, "line": " Second Privesc Method (passwd)"}, {"machine": "Bastard", "videoId": "lP-E5vmZNC0", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Sherlock was fixed, should no longer report the false negative https://github.com/rasta-mouse/Sherlock/commit/ceb49f5b54be54effbada47fa3198abf744af390"}, {"machine": "Bastard", "videoId": "lP-E5vmZNC0", "timestamp": {"minutes": 0, "seconds": 1}, "line": " If you wanted to do this with MSF -- Watch the Arctic Video and use the exploit shown in the video.  If it doesn't work, try changing the payload with the exploit and ensure you're a 64 bit process."}, {"machine": "Beep", "videoId": "XJmBpOd__N8", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Watch me fail my way to victory as I exploit beep 4 different ways.  Next time I try to exploit something multiple ways, I'll probably split it up in multiple videos."}, {"machine": "Beep", "videoId": "XJmBpOd__N8", "timestamp": {"minutes": 1, "seconds": 35}, "line": " Method 1: LFI + Password"}, {"machine": "Beep", "videoId": "XJmBpOd__N8", "timestamp": {"minutes": 16, "seconds": 3}, "line": " Method 2: Turning LFI into RCE"}, {"machine": "Beep", "videoId": "XJmBpOd__N8", "timestamp": {"minutes": 37, "seconds": 46}, "line": " Method 3: Code exec via call"}, {"machine": "Beep", "videoId": "XJmBpOd__N8", "timestamp": {"minutes": 54, "seconds": 0}, "line": " Method 4: Shellshock"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 0, "seconds": 20}, "line": " Recon"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 3, "seconds": 40}, "line": " Start of WP Hacking"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 10, "seconds": 30}, "line": " Logged into WP"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 15, "seconds": 0}, "line": " Login to SuperSecretForum"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 25, "seconds": 0}, "line": " Cracking the SSH Key"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 27, "seconds": 15}, "line": " Begin of getting root.txt (RSA Cracking)"}, {"machine": "Brainfuck", "videoId": "o5x1yg3JnYI", "timestamp": {"minutes": 0, "seconds": 1}, "line": " http://rumkin.com/tools/cipher/ -- Site used to during the SecretForum stuff."}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Twitter @ippSec"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Low Priv: Default Account + File Upload"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 0, "seconds": 1}, "line": " PrivEsc: Return to LibC + ASLR Bruteforce"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 0, "seconds": 45}, "line": " Pulling up Web Page."}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 1, "seconds": 10}, "line": " Searchsploit"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 2, "seconds": 40}, "line": " Enumerating Version (Download Versions, Hash Static Files)"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 8, "seconds": 20}, "line": " Default cred /backend -- Upload Shell"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 9, "seconds": 51}, "line": " User Reverse Shell"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 12, "seconds": 10}, "line": " Transfering file over nc"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 14, "seconds": 45}, "line": " Begin \"fuzzing\" Binary"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 16, "seconds": 15}, "line": " GDB Analysis"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 18, "seconds": 46}, "line": " Get a full reverse shell with tab autocomplete."}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 19, "seconds": 0}, "line": " Showing ASLR changing address "}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 20, "seconds": 20}, "line": " Disable ASLR on Exploit Dev Machine"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 21, "seconds": 15}, "line": " Start of exploit development for ovrflw binary (Pattner_Create)"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 27, "seconds": 27}, "line": " Start of Return to LibC attack - Getting Addresses"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 37, "seconds": 20}, "line": " Grabbing memory locations off October Machine"}, {"machine": "October", "videoId": "K05mJazHhF4", "timestamp": {"minutes": 41, "seconds": 0}, "line": " Convert script to Bruteforce ASLR"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 0, "seconds": 0}, "line": " Intro"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 0, "seconds": 12}, "line": " Enumerate with nmap"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 0, "seconds": 40}, "line": " Going to the webpage"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 1, "seconds": 50}, "line": " Using SearchSploit to find ColdFusion Exploits"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 2, "seconds": 40}, "line": " Attempt to exploit through MSF. Debug why it failed."}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 3, "seconds": 50}, "line": " Setting up a Burp Redirect listener"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 4, "seconds": 55}, "line": " Examining request send by MSF Exploit"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 6, "seconds": 35}, "line": " Getting a reverse shell"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 7, "seconds": 50}, "line": " Using Unicorn to create a Powershell Meterpreter Loa"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 0, "seconds": 1}, "line": " der"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 11, "seconds": 35}, "line": " Reverseshell returned"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 12, "seconds": 10}, "line": " Using the MSF post module local_exploit_suggestor"}, {"machine": "Arctic", "videoId": "e9lVyFH7-4o", "timestamp": {"minutes": 15, "seconds": 29}, "line": " Privesc via MS10-092"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 25}, "line": " TMUX and Connecting to HTB"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 2, "seconds": 0}, "line": " Virtual Host Routing Explanation"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 2, "seconds": 40}, "line": " File Enumeration (Dirb)"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 3, "seconds": 59}, "line": " Discover of Web App"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 5, "seconds": 45}, "line": " Starting SQLMap in the Background"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 9, "seconds": 30}, "line": " Uploading a PHP Shell"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 14, "seconds": 1}, "line": " Python PTY Reverse Shell (Tab Autocomplete!)"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 19, "seconds": 25}, "line": " MOTD Root (Method 1)"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 23, "seconds": 50}, "line": " Dirtyc0w Root (Method 2)"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Twitter: @ippSec"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Low Priv - File Upload (Torrent image)"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Roots: MOTD/PAM exploit and DirtC0w"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Stuff about phpinfo(): https://www.insomniasec.com/downloads/publications/LFI%20With%20PHPInfo%20Assistance.pdf"}, {"machine": "Popcorn", "videoId": "NMGsnPSm8iw", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Python PTY Shells: https://github.com/infodox/python-pty-shells"}, {"machine": "Popcorn", "videoId": "yy6z3fL3vi8", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up Link:"}, {"machine": "Popcorn", "videoId": "yy6z3fL3vi8", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-3/"}, {"machine": "Popcorn", "videoId": "hWC7mlIYOtU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "hWC7mlIYOtU", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-4/#dungeon"}, {"machine": "Popcorn", "videoId": "5UZy8OdqA4o", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "5UZy8OdqA4o", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-4/#ad"}, {"machine": "Popcorn", "videoId": "fcemTQaosOQ", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "fcemTQaosOQ", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-4/#debug"}, {"machine": "Popcorn", "videoId": "2jQ2W5epPYc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "2jQ2W5epPYc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-4/#exception"}, {"machine": "Popcorn", "videoId": "zcJyhDC9kgo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "zcJyhDC9kgo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/part-4/#analytics"}, {"machine": "Popcorn", "videoId": "zcJyhDC9kgo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Note: Video may contain slight errors, most notably in this video is mistakenly saying \"Hash\" instead of \"Encrypt\" (ex: @5 minutes). "}, {"machine": "Popcorn", "videoId": "zcJyhDC9kgo", "timestamp": {"minutes": 0, "seconds": 1}, "line": " A full text writeup can be found at:"}, {"machine": "Popcorn", "videoId": "ylBjVicempc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Write Up:"}, {"machine": "Popcorn", "videoId": "ylBjVicempc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " https://ippsec.github.io/holidayhack2016/tokens/"}, {"machine": "Popcorn", "videoId": "ylBjVicempc", "timestamp": {"minutes": 0, "seconds": 1}, "line": " Note: Video may contain slight errors, most notably in this video is using \"function\" and \"variable\" interchangeably."}]
